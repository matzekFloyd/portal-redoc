{
  "openapi": "3.0.0",
  "info": {
    "title": "v2-api",
    "version": "1.4.3"
  },
  "servers": [
    {
      "url": "https://apitest.kompany.com"
    }
  ],
  "paths": {
    "/api/v2/application/callBack/{affectedService}": {
      "put": {
        "tags": [
          "v2-application"
        ],
        "summary": "Callback settings",
        "description": "Create or update callback settings for a certain affected service",
        "operationId": "createOrUpdateCallback",
        "parameters": [
          {
            "name": "affectedService",
            "in": "path",
            "description": "The service affected by the settings.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "liveSearch",
                "dataset",
                "enhanced",
                "productOrder",
                "uboOrder",
                "monitor",
                "pep",
                "kompanyMessages"
              ]
            },
            "example": "dataset"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callbackSetting-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/callback-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "application_callback_1"
      },
      "get": {
        "tags": [
          "v2-application"
        ],
        "summary": "Callback setting retrieval",
        "description": "Retrieve callback settings for a certain affected service",
        "operationId": "getCallbackSetting",
        "parameters": [
          {
            "name": "affectedService",
            "in": "path",
            "description": "The service affected by the settings.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "liveSearch",
                "dataset",
                "enhanced",
                "productOrder",
                "uboOrder",
                "monitor",
                "pep",
                "kompanyMessages"
              ]
            },
            "example": "dataset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/callbackType-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "application_callback_3"
      },
      "delete": {
        "tags": [
          "v2-application"
        ],
        "summary": "Callback setting deletion",
        "description": "Delete callback settings for a certain affected service",
        "operationId": "deleteCallbackSetting",
        "parameters": [
          {
            "name": "affectedService",
            "in": "path",
            "description": "The service affected by the settings.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "liveSearch",
                "dataset",
                "enhanced",
                "productOrder",
                "uboOrder",
                "monitor",
                "pep",
                "kompanyMessages"
              ]
            },
            "example": "dataset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "application_callback_4"
      }
    },
    "/api/v2/application/callBack": {
      "get": {
        "tags": [
          "v2-application"
        ],
        "summary": "Callback settings list",
        "description": "Retrieve the list of callback settings",
        "operationId": "listCallbackSettings",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/callbackSetting-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "application_callback_2"
      }
    },
    "/api/v2/company/indexSearch": {
      "post": {
        "tags": [
          "v2-company"
        ],
        "summary": "Index search",
        "description": "Request an entity index search",
        "operationId": "requestEnityIndexSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indexSearchRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchFormattedResultModel-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_1"
      }
    },
    "/api/v2/company/liveSearch": {
      "post": {
        "tags": [
          "v2-company"
        ],
        "summary": "Live search",
        "description": "Request an entity live search",
        "operationId": "requestEnityLiveSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/liveSearchRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchFormattedResultModel-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_2"
      }
    },
    "/api/v2/company/idSearch": {
      "post": {
        "tags": [
          "v2-company"
        ],
        "summary": "Id search",
        "description": "Request an entity id search",
        "operationId": "requestEnityIdSearch",
        "requestBody": {
          "description": "Search for company by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/idSearchRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/idSearchResponse-schema"
                }
              }
            }
          }
        },
        "x-sorting": "company_3"
      }
    },
    "/api/v2/company/dataset": {
      "post": {
        "tags": [
          "v2-company"
        ],
        "summary": "Dataset order",
        "description": "Request a dataset for a certain entity",
        "operationId": "orderDataset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/datasetRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasetResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_4"
      },
      "get": {
        "tags": [
          "v2-company"
        ],
        "summary": "Dataset list",
        "description": "Retrieve the list of previously purchased dataset requests",
        "operationId": "listDatasets",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset-parameter"
          },
          {
            "$ref": "#/components/parameters/limit-parameter"
          },
          {
            "$ref": "#/components/parameters/status-parameter"
          },
          {
            "$ref": "#/components/parameters/datasetName-parameter"
          },
          {
            "$ref": "#/components/parameters/requestTimeFrom-parameter"
          },
          {
            "$ref": "#/components/parameters/requestTimeTo-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/datasetResponse-schema"
                  },
                  "maxItems": 1
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_7"
      }
    },
    "/api/v2/company/dataset/{datasetId}": {
      "get": {
        "tags": [
          "v2-company"
        ],
        "summary": "Dataset retrieval",
        "description": "Retrieve information of a certain purchased dataset",
        "operationId": "getDatasetByDatasetId",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Unique id of the dataset request.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "F75E3FE5C94019930B4195F667738D6C"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasetResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_5"
      }
    },
    "/api/v2/company/enhanced": {
      "post": {
        "tags": [
          "v2-company"
        ],
        "summary": "Enhanced order",
        "description": "Request an enhanced for a certain entity",
        "operationId": "orderEnhanced",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enhancedDatasetRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enhancedResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_6"
      }
    },
    "/api/v2/company/announcement": {
      "post": {
        "tags": [
          "v2-company"
        ],
        "summary": "Announcement",
        "description": "Request a list of public announcements for a certain entity",
        "operationId": "listCompanyAnnouncements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset-parameter"
          },
          {
            "$ref": "#/components/parameters/limit-parameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/announcementRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "announcementResults",
                  "description": "Response scheme of/api/v2/company/announcement/{kompanyId}",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/announcementResponse-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_8"
      }
    },
    "/api/v2/company/announcement/{kompanyId}/{announcementId}": {
      "get": {
        "tags": [
          "v2-company"
        ],
        "summary": "Announcement retrieval",
        "description": "Retrieve information of a certain announcement for an entity",
        "operationId": "getAnnouncementByAnnouncementId",
        "parameters": [
          {
            "$ref": "#/components/parameters/kompanyId-parameter"
          },
          {
            "name": "announcementId",
            "in": "path",
            "description": "Unique id of the announcement.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "17F9B790830D362237E209626649CBF1"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/announcementResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "company_9"
      }
    },
    "/api/v2/monitor": {
      "post": {
        "tags": [
          "v2-monitor"
        ],
        "summary": "Monitor registration",
        "description": "Request a monitor service for a certain entity",
        "operationId": "requestMonitorService",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createMonitorRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/monitorResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "monitor_1"
      },
      "get": {
        "tags": [
          "v2-monitor"
        ],
        "summary": "Monitor list",
        "description": "Retrieve the list of previously purchased monitor service requests",
        "operationId": "listMonitors",
        "parameters": [
          {
            "name": "kompanyId",
            "in": "query",
            "description": "Unique id of company element in subject. Static for a company for the lifetime.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "E41861C895CB1DDDDA93054179FFA172"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the monitor. Possible values are PENDING, CREATED, FIRED, DELETED.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "CREATED"
            }
          },
          {
            "$ref": "#/components/parameters/limit-parameter"
          },
          {
            "$ref": "#/components/parameters/offset-parameter"
          },
          {
            "$ref": "#/components/parameters/requestTimeFrom-parameter"
          },
          {
            "$ref": "#/components/parameters/requestTimeTo-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/monitorResponse-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "monitor_2"
      }
    },
    "/api/v2/monitor/{monitorId}": {
      "get": {
        "tags": [
          "v2-monitor"
        ],
        "summary": "Monitor retrieval",
        "description": "Retrieve information of a certain purchased monitor service request",
        "operationId": "getMonitorRequest",
        "parameters": [
          {
            "name": "monitorId",
            "in": "path",
            "description": "Id of a certain monitor request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of maximum results can be set with this option.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "10",
              "example": "50"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page number to be requested.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "0",
              "example": "10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/monitorResponse-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "monitor_3"
      },
      "delete": {
        "tags": [
          "v2-monitor"
        ],
        "summary": "Monitor deletion",
        "description": "Delete a certain purchased monitor service request",
        "operationId": "deleteMonitorRequest",
        "parameters": [
          {
            "name": "monitorId",
            "in": "path",
            "description": "Id of a certain monitor request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "monitor_4"
      }
    },
    "/api/v2/monitor/{monitorId}/{changeId}": {
      "get": {
        "tags": [
          "v2-monitor"
        ],
        "summary": "Monitor change retrieval",
        "description": "Retrieve information of a certain change for a monitor service request",
        "operationId": "getMonitorChange",
        "parameters": [
          {
            "name": "monitorId",
            "in": "path",
            "description": "Id of a certain monitor request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "changeId",
            "in": "path",
            "description": "Id of a certain change request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/changeByIdResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "monitor_5"
      }
    },
    "/api/v2/application/monitorSettings": {
      "put": {
        "tags": [
          "v2-monitor"
        ],
        "summary": "Monitor settings",
        "description": "Create or update monitor settings",
        "operationId": "createOrUpdateMonitorSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createMonitorSetting-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createMonitorSetting-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "monitor_6"
      },
      "get": {
        "tags": [
          "v2-monitor"
        ],
        "summary": "Monitor setting list",
        "description": "Retrieve the list of monitor settings",
        "operationId": "listMonitorSettings",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/createMonitorSetting-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "monitor_7"
      }
    },
    "/api/v2/product/search/{kompanyId}": {
      "get": {
        "tags": [
          "v2-product"
        ],
        "summary": "Product search",
        "description": "Retrieve the list of possible products for a certain entity",
        "operationId": "listProductsForACompany",
        "parameters": [
          {
            "$ref": "#/components/parameters/kompanyId-parameter"
          },
          {
            "$ref": "#/components/parameters/productType-parameter"
          },
          {
            "$ref": "#/components/parameters/startDate-parameter"
          },
          {
            "$ref": "#/components/parameters/endDate-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/productResponse-schema"
                  },
                  "maxItems": 1
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "product_order_1"
      }
    },
    "/api/v2/product/order": {
      "get": {
        "tags": [
          "v2-product"
        ],
        "summary": "Product order list",
        "description": "Retrieve the list of previously purchased product order requests",
        "operationId": "listProductOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset-parameter"
          },
          {
            "$ref": "#/components/parameters/limit-parameter"
          },
          {
            "$ref": "#/components/parameters/status-parameter"
          },
          {
            "$ref": "#/components/parameters/productType-parameter"
          },
          {
            "$ref": "#/components/parameters/requestTimeFrom-parameter"
          },
          {
            "$ref": "#/components/parameters/requestTimeTo-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/orderResponse-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "product_order_2"
      },
      "post": {
        "tags": [
          "v2-product"
        ],
        "summary": "Product order",
        "description": "Request a product for a certain entity",
        "operationId": "orderProduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createProductOrderRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "product_order_3"
      }
    },
    "/api/v2/product/order/ubo": {
      "post": {
        "tags": [
          "v2-product"
        ],
        "summary": "UBO discovery order",
        "description": "Request a UBO discovery report for a certain entity",
        "operationId": "orderUBODisvoceryReport",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUboOrderRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uboOrderResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "product_order_4"
      }
    },
    "/api/v2/product/order/concierge": {
      "post": {
        "tags": [
          "v2-product"
        ],
        "summary": "Business concierge order",
        "description": "Request a business concierge service for a certain entity",
        "operationId": "orderBusinessConciergeService",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/businessConciergeRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order Business Concierge",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/businessConciergeOrderResponse-schema"
                }
              }
            }
          }
        },
        "x-sorting": "product_order_5"
      }
    },
    "/api/v2/product/order/landRegister": {
      "post": {
        "tags": [
          "v2-product"
        ],
        "summary": "Land Register order",
        "description": "Request a Land Register document or extract",
        "operationId": "orderLandRegisterDocument",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/landRegisterRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order landRegister",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/landRegisterOrderResponse-schema"
                }
              }
            }
          }
        },
        "x-sorting": "product_order_6"
      }
    },
    "/api/v2/product/order/{orderId}": {
      "put": {
        "tags": [
          "v2-product"
        ],
        "summary": "Product order update",
        "description": "Update status of a certain purchased product order",
        "operationId": "updateProductOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/orderId-parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUpdateRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "product_order_7"
      },
      "get": {
        "tags": [
          "v2-product"
        ],
        "summary": "Product order retrieval",
        "description": "Retrieve information of a certain purchased product order",
        "operationId": "getProductInformation",
        "parameters": [
          {
            "$ref": "#/components/parameters/orderId-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderByIdResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "product_order_8"
      }
    },
    "/api/v2/product/order/{orderId}/content": {
      "get": {
        "tags": [
          "v2-product"
        ],
        "summary": "Product content retrieval",
        "description": "Retrieve content of a certain purchased product order",
        "operationId": "getProductOrderContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/orderId-parameter"
          }
        ],
        "responses": {
          "400": {
            "description": "Wrong document type in header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse-schema"
                }
              }
            }
          },
          "200": {
            "description": "Successful response",
            "headers": {
              "accept": {
                "description": "The document type of the requested product, value needs to be passed to the header/accept field when retrieving the content (e.g. application/json).",
                "schema": {
                  "type": "string",
                  "example": "application/pdf or application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "product_order_9"
      }
    },
    "/api/v2/system/monitorChangeTypes": {
      "get": {
        "tags": [
          "v2-system"
        ],
        "summary": "Monitor change types",
        "description": "Retrieve the list of available change types for a monitor service request",
        "operationId": "listMonitorChangeTypes",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/monitorChangeTypes-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "system_5"
      }
    },
    "/api/v2/system/uboLegalTypes": {
      "get": {
        "tags": [
          "v2-system"
        ],
        "summary": "UBO discovery legal types",
        "description": "Retrieve the list of available legal types for a UBO discovery report",
        "operationId": "listUboLegalTypes",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/uboLegalTypes-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "system_6"
      }
    },
    "/api/v2/system/coverage": {
      "get": {
        "tags": [
          "v2-system"
        ],
        "summary": "Coverage details",
        "description": "Retrieve coverage details on available sources, datasets, documents, searches and concierge services for each jurisdiction",
        "operationId": "listCoverageDetails",
        "parameters": [
          {
            "name": "countryCode",
            "in": "query",
            "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "AT"
          },
          {
            "name": "countryConnectionType",
            "in": "query",
            "description": "The type of connection to the country's data sources (e.g. 'L': Live, 'RU': Live - Regular Updates, 'BC': Business Concierge, 'D': Discontinued, 'NC': Not Covered Yet).",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "L"
          },
          {
            "name": "continent",
            "in": "query",
            "description": "Continent on which the country is located (e.g. 'EU': Europe, 'AM': Asia and Middle East:, 'NA': North America, 'AF': Africa, 'OC': Oceania, 'SA': South America).",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "EU"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jurisdiction-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "system_7"
      }
    },
    "/api/v2/system/serviceMessages": {
      "get": {
        "tags": [
          "v2-system"
        ],
        "summary": "ServiceMessages list",
        "description": "Retrieve a list of serviceMessages",
        "operationId": "serviceMessagesList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit-parameter"
          },
          {
            "$ref": "#/components/parameters/offset-parameter"
          },
          {
            "$ref": "#/components/parameters/messageAffectedCountry-parameter"
          },
          {
            "$ref": "#/components/parameters/messageAffectedService-parameter"
          },
          {
            "$ref": "#/components/parameters/messageCategory-parameter"
          },
          {
            "$ref": "#/components/parameters/messageStatus-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Response schema",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "offset": {
                      "type": "integer"
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serviceMessageResponse-schema"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "system_8"
      }
    },
    "/api/v2/system/serviceMessages/{messageId}": {
      "get": {
        "tags": [
          "v2-system"
        ],
        "summary": "ServiceMessage by id",
        "description": "Retrieve a certain serviceMessage by messageId",
        "operationId": "serviceMessageById",
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Response schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceMessageResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "system_9"
      }
    },
    "/api/v2/verification/isin": {
      "post": {
        "tags": [
          "v2-verification"
        ],
        "summary": "ISIN validation",
        "description": "Request an ISIN search and validation",
        "operationId": "requestISINValidation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/isinRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/isinResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_1"
      }
    },
    "/api/v2/verification/ein": {
      "post": {
        "tags": [
          "v2-verification"
        ],
        "summary": "EIN validation",
        "description": "Request an EIN search and validation",
        "operationId": "requestEINValidation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/einRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/einResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_2"
      }
    },
    "/api/v2/verification/iban": {
      "post": {
        "tags": [
          "v2-verification"
        ],
        "summary": "IBAN validation",
        "description": "Request a IBAN search and validation",
        "operationId": "requestIBANValidation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ibanRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ibanResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_3"
      }
    },
    "/api/v2/verification/leiValidation": {
      "post": {
        "tags": [
          "v2-verification"
        ],
        "summary": "LEI validation",
        "description": "Request a LEI search and validation",
        "operationId": "requestLEIValidation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/leiValidationRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/leiValidationResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_4"
      },
      "get": {
        "tags": [
          "v2-verification"
        ],
        "summary": "LEI validation list",
        "description": "Retrieve the list of previously purchased LEI validation requests",
        "operationId": "listLEIValidations",
        "parameters": [
          {
            "$ref": "#/components/parameters/status-parameter"
          },
          {
            "$ref": "#/components/parameters/offset-parameter"
          },
          {
            "$ref": "#/components/parameters/limit-parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/leiValidationResponse-schema"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_6"
      }
    },
    "/api/v2/verification/leiValidation/{validationId}": {
      "get": {
        "tags": [
          "v2-verification"
        ],
        "summary": "LEI validation retrieval",
        "description": "Retrieve information of certain purchased LEI validation",
        "operationId": "getLEIValidation",
        "parameters": [
          {
            "name": "validationId",
            "in": "path",
            "description": "Id of a certain validation request.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCXXXX"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/leiValidationResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_5"
      }
    },
    "/api/v2/verification/tin": {
      "post": {
        "tags": [
          "v2-verification"
        ],
        "summary": "TIN validation",
        "description": "Request a TIN search and validation",
        "operationId": "requestTINValidation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tinRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tinResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_7"
      }
    },
    "/api/v2/verification/vat": {
      "post": {
        "tags": [
          "v2-verification"
        ],
        "summary": "VAT validation",
        "description": "Request a VAT search and validation",
        "operationId": "requestVATValidation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vatRequest-schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vatResponse-schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-sorting": "verification_8"
      }
    }
  },
  "components": {
    "schemas": {
      "callbackSetting-schema": {
        "title": "callbackSetting",
        "description": "Callback table",
        "properties": {
          "callBackType": {
            "description": "The method how client wants to be notified.",
            "type": "string",
            "enum": [
              "stream",
              "webhook-post",
              "webhook-get"
            ],
            "example": "webhook-get"
          },
          "callBackUrl": {
            "description": "The url where callBack notification will be sent.",
            "type": "string",
            "example": "https://xyz.com/x/y/z/callback-path"
          }
        },
        "type": "object"
      },
      "serviceMessageResponse-schema": {
        "title": "serviceMessageResponse",
        "description": "KompanyMessage table",
        "properties": {
          "messageId": {
            "description": "ID of messages.",
            "type": "string"
          },
          "title": {
            "description": "Title of messages.",
            "type": "string"
          },
          "status": {
            "description": "Status of messages.",
            "type": "string"
          },
          "category": {
            "description": "Category of messages.",
            "type": "string"
          },
          "messageBodyEnglish": {
            "description": "Message body in English.",
            "type": "string"
          },
          "messageBodyGerman": {
            "nullable": true,
            "description": "Message body in German.",
            "type": "string"
          },
          "callToActionLabel": {
            "nullable": true,
            "description": "Call to action label.",
            "type": "string"
          },
          "callToActionUrl": {
            "nullable": true,
            "description": "Call to action URL.",
            "type": "string"
          },
          "createdTime": {
            "description": "Created time.",
            "type": "string"
          },
          "updatedTime": {
            "description": "Updated time.",
            "type": "string"
          },
          "effectFromTime": {
            "description": "Effect from time.",
            "type": "string"
          },
          "effectToTime": {
            "nullable": true,
            "description": "Effect to time.",
            "type": "string"
          },
          "affectedService": {
            "description": "Affected service.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "affectedCountry": {
            "description": "Affected country.",
            "type": "array",
            "items": {
              "properties": {
                "countryCode": {
                  "description": "Country code.",
                  "type": "string"
                },
                "countryName": {
                  "description": "Country name.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "affectedProvider": {
            "nullable": true,
            "description": "Affected provider.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "leiValidationResponse-schema": {
        "title": "leiValidationResponse",
        "description": "LeiValidationResponse object.",
        "properties": {
          "validationId": {
            "description": "Unique id of the validation.",
            "type": "string",
            "example": "1234567890"
          },
          "searchMethod": {
            "description": "The type of search (e.g. LEI).",
            "type": "string",
            "example": "LEI"
          },
          "searchValue": {
            "description": "Search value in string format.",
            "type": "string",
            "example": "549300FP3BGN4PR70F30"
          },
          "validationOptions": {
            "properties": {
              "isinPageNumber": {
                "description": "Pagination setting for LEI list, number of the page.",
                "type": "number"
              },
              "isinPageSize": {
                "description": "Pagination setting for LEI list, number of items in the result set.",
                "type": "number"
              }
            },
            "type": "object"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "estimatedDeliverySeconds": {
            "$ref": "#/components/schemas/estimatedDeliverySeconds-schema"
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "searchResults": {
            "type": "array",
            "items": {
              "properties": {
                "kompanyId": {
                  "$ref": "#/components/schemas/kompanyId-schema"
                },
                "entityValidation": {
                  "$ref": "#/components/schemas/entityValidation-schema"
                },
                "source": {
                  "$ref": "#/components/schemas/sourceProvider-schema"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "associatedEntities-schema": {
        "title": "associatedEntities",
        "properties": {
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholders-schema"
            }
          },
          "officers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/officers-schema"
            }
          },
          "ultimateBeneficialOwners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ultimateBeneficialOwners-schema"
            }
          },
          "jointShareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jointShareholders-schema"
            }
          }
        },
        "type": "object"
      },
      "additionalAssociatedEntityData-beneficialOwner-schema": {
        "title": "additionalAssociatedEntityData-beneficialOwner",
        "properties": {
          "formattedAddress": {
            "$ref": "#/components/schemas/formattedAddress-schema"
          },
          "status": {
            "type": "string"
          },
          "localName": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "officers": {
            "description": "The value is applicable exclusively to entities based in the US-CA region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/officers-schema"
            }
          },
          "signatoryRights": {
            "type": "string"
          },
          "meansOfControl": {
            "type": "array",
            "items": {
              "properties": {
                "boMeansOfControl": {
                  "type": "string"
                },
                "ownershipTypeDetails": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ownershipTypeDetails-schema"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "additionalData-schema": {
        "title": "additionalData",
        "properties": {
          "capitalCurrency": {
            "description": "The currency of the capital.",
            "type": "string"
          },
          "businessAreas": {
            "description": "Refers to the geographical region within which a company operates (e.g. New Zealand).",
            "type": "string"
          },
          "residenceCountry": {
            "description": "The country where the entity is officially registered.",
            "type": "string"
          },
          "subClass": {
            "description": "The sub class of the legal form.",
            "type": "string"
          },
          "otherIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/otherIdentifier-schema"
            }
          },
          "otherNames": {
            "$ref": "#/components/schemas/otherNames-schema"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/contactInformation-schema"
          },
          "branches": {
            "description": "Branches or subsidiaries of a company.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/branches-schema"
            }
          },
          "shares": {
            "$ref": "#/components/schemas/shares-schema"
          },
          "shareCapitals": {
            "description": "The capital contributed by the shareholders.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareCapitalItem-schema"
            }
          },
          "legalEvents": {
            "properties": {
              "incorporationDate": {
                "description": "The date the company was incorporated. This date is same as or earlier than the registration date.",
                "type": "string"
              },
              "registrationDate": {
                "description": "The date the company was registered. This date is same as or after the incorporation date.",
                "type": "string"
              },
              "dissolutionDate": {
                "description": "The date the company was dissolved.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "registerCourt": {
            "description": "Name of the court where the entity is officially registered.",
            "type": "string"
          },
          "listed": {
            "description": "Boolean showing whether the entity is listed on a stock exchange (e.g. y/n).",
            "type": "string"
          },
          "capitalAmount": {
            "description": "The funds contributed by owners or investors to start or expand a business.",
            "type": "number"
          },
          "legalRepresentative": {
            "description": "The name of the company's legal representative (e.g. China).",
            "type": "string"
          },
          "leiDetails": {
            "description": "Legal Entity Identifier details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/leiDetails-schema"
            }
          }
        },
        "type": "object"
      },
      "additionalAssociatedEntityData-officer-schema": {
        "title": "additionalAssociatedEntityData-officer",
        "properties": {
          "formattedAddress": {
            "$ref": "#/components/schemas/formattedAddress-schema"
          },
          "status": {
            "type": "string"
          },
          "localName": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "officers": {
            "description": "The value is applicable exclusively to entities based in the US-CA region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/officers-schema"
            }
          },
          "type": {
            "type": "string"
          },
          "meansOfControl": {
            "type": "array",
            "items": {
              "properties": {
                "boMeansOfControl": {
                  "type": "string"
                },
                "ownershipTypeDetails": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ownershipTypeDetails-schema"
                  }
                }
              },
              "type": "object"
            }
          },
          "signatoryRights": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "additionalAssociatedEntityData-shareholder-schema": {
        "title": "additionalAssociatedEntityData-shareholder",
        "properties": {
          "formattedAddress": {
            "$ref": "#/components/schemas/formattedAddress-schema"
          },
          "status": {
            "type": "string"
          },
          "localName": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "officers": {
            "description": "The value is applicable exclusively to entities based in the US-CA region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/officers-schema"
            }
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ultimateBeneficialOwners-schema": {
        "title": "ultimateBeneficialOwners",
        "description": "The value is available only for enhanced datasets.",
        "properties": {
          "name": {
            "description": "The name of the associated entity in the company.",
            "type": "string",
            "x-sorting": "0010"
          },
          "role": {
            "description": "The role of the associated entity within the company.",
            "type": "string",
            "x-sorting": "0023"
          },
          "providedRole": {
            "description": "The role of the associated entity within the company. In original language in cases where it is provided by the Register.",
            "type": "string",
            "x-sorting": "0031"
          },
          "isCorporate": {
            "description": "Boolean indicating whether the associated entity is a corporate entity.",
            "type": "boolean",
            "x-sorting": "0041"
          },
          "registrationNumber": {
            "description": "The registration number of a associated entity.",
            "type": "string",
            "x-sorting": "0052"
          },
          "legalForm": {
            "description": "The associated entity's legal form.",
            "type": "string",
            "x-sorting": "0060"
          },
          "address": {
            "description": "The address associated with the associated entity.",
            "type": "string",
            "x-sorting": "0070"
          },
          "startDate": {
            "description": "The date the associated entity started their role.",
            "type": "string",
            "x-sorting": "0080"
          },
          "endDate": {
            "description": "The date the associated entity ended their role.",
            "type": "string",
            "x-sorting": "0090"
          },
          "status": {
            "description": "The status of a beneficial owner, which typically refers to their relationship with an entity or asset.",
            "type": "string",
            "x-sorting": "0095"
          },
          "sharePercentage": {
            "description": "The percentage of the share compared to the total.",
            "type": "string",
            "x-sorting": "0096"
          },
          "dateOfBirth": {
            "description": "The date of birth of the associated entity.",
            "type": "string",
            "x-sorting": "0100"
          },
          "nationality": {
            "description": "The nationality of the associated entity.",
            "type": "string",
            "x-sorting": "0110"
          },
          "identityDocument": {
            "description": "The identity document of the associated entity.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-sorting": "0120"
          },
          "personalId": {
            "description": "The personalId of the associated entity.",
            "type": "string",
            "x-sorting": "0130"
          },
          "residenceCountry": {
            "description": "The residence country of the associated entity.",
            "type": "string",
            "x-sorting": "0140"
          },
          "additionalAssociatedEntityData": {
            "$ref": "#/components/schemas/additionalAssociatedEntityData-beneficialOwner-schema"
          }
        },
        "type": "object"
      },
      "calculatedBeneficialOwnershipIntermediarie-schema": {
        "title": "calculatedBeneficialOwnershipIntermediarie",
        "properties": {
          "name": {
            "description": "This field indicates the full name of the Beneficial owner. It should always be provided.",
            "type": "string"
          },
          "gender": {
            "description": "Gives the gender of the beneifical owner. Can take 2 values : F for Female or M for Male. Can be empty.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "Gives the brithdate of the beneficial owner if available, can be complete (DD/MM/YYYY) or not (MM/YYYY or YYYY).",
            "type": "string"
          },
          "address": {
            "description": "Gives the address of the Beneficial owner intermediary. This field includes the street, the number of the building where the entity is located and the number of the floor of the building if available.",
            "type": "string"
          },
          "country": {
            "description": "Gives the country of the Beneficial owner intermediary.",
            "type": "string"
          },
          "distance": {
            "description": "Gives the distance between the concerned entity (Beneficial owner intermediaries) and its Benefecial owner. If the distance is 4, it means that the BOI is the fourth entity in the path to the BO.",
            "type": "string"
          },
          "ownership": {
            "type": "object"
          },
          "informationDate": {
            "description": "Date when the link between the shareholder and the company just below in the BO path has been confirmed. Date format is MM/YYYY.",
            "type": "string"
          },
          "screening": {
            "$ref": "#/components/schemas/screening-schema"
          }
        },
        "type": "object"
      },
      "calculatedBeneficialOwnershipPath-schema": {
        "title": "calculatedBeneficialOwnershipPath",
        "description": "calculatedBeneficialOwnershipPath data object.",
        "properties": {
          "name": {
            "description": "This field indicates the full name of the Beneficial owner. It should always be provided.",
            "type": "string"
          },
          "gender": {
            "description": "Gives the gender of the beneifical owner. Can take 2 values : F for Female or M for Male. Can be empty.",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "Gives the brithdate of the beneficial owner if available, can be complete (DD/MM/YYYY) or not (MM/YYYY or YYYY).",
            "type": "string"
          },
          "address": {
            "description": "Gives the address of the Beneficial owner intermediary. This field includes the street, the number of the building where the entity is located and the number of the floor of the building if available.",
            "type": "string"
          },
          "country": {
            "description": "Gives the country of the Beneficial owner intermediary.",
            "type": "string"
          },
          "distance": {
            "description": "Gives the distance between the concerned entity (Beneficial owner intermediaries) and its Benefecial owner. If the distance is 4, it means that the BOI is the fourth entity in the path to the BO.",
            "type": "string"
          },
          "ownership": {
            "type": "object"
          },
          "informationDate": {
            "description": "Date when the link between the shareholder and the company just below in the BO path has been confirmed. Date format is MM/YYYY.",
            "type": "string"
          },
          "screening": {
            "$ref": "#/components/schemas/screening-schema"
          },
          "calculatedBeneficialOwnershipIntermediaries": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/calculatedBeneficialOwnershipIntermediarie-schema"
                }
              ]
            }
          }
        },
        "type": "object"
      },
      "datasetCompanyContent-schema": {
        "title": "datasetCompanyContent",
        "description": "The root dataset company object.",
        "properties": {
          "kompanyId": {
            "description": "Unique id of company element in subject. Static for a company for the lifetime.",
            "type": "string",
            "example": "B3F56CBD8A61B7744D7670610F639C8A",
            "x-sorting": "0010"
          },
          "countryCode": {
            "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
            "type": "string",
            "example": "AT,US-DE",
            "x-sorting": "0020"
          },
          "countryName": {
            "description": "The name of the country where the company is registered.",
            "type": "string",
            "example": "Austria",
            "x-sorting": "0021"
          },
          "state": {
            "description": "This is the specific state being represented in the United States.",
            "type": "string",
            "example": "Alabama",
            "x-sorting": "0022"
          },
          "registrationNumber": {
            "description": "Registration number of a company preceeded by the country code.",
            "type": "string",
            "example": "340561a",
            "x-sorting": "0030"
          },
          "name": {
            "description": "Name of the legal entity.",
            "type": "string",
            "example": "Moody's Analytics Austria GmbH",
            "x-sorting": "0040"
          },
          "status": {
            "description": "The current status of the company, derived from registry data, mapped categories.",
            "type": "string",
            "enum": [
              "LIVE",
              "CLOSED",
              "NOT REPORTED"
            ],
            "x-sorting": "0050"
          },
          "providedStatus": {
            "description": "The legal status of the company. In original language in cases where it is provided by the register.",
            "type": "string",
            "x-sorting": "0060"
          },
          "address": {
            "description": "Official address of the company.",
            "type": "string",
            "x-sorting": "0070"
          },
          "legalForm": {
            "description": "The legal form of the company. In original language in cases where it is provided by the Register.",
            "type": "string",
            "x-sorting": "0080"
          },
          "associatedEntities": {
            "nullable": true,
            "description": "Associated entities object.",
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/associatedEntities-schema"
              }
            ],
            "x-sorting": "0140"
          },
          "industryActivityCode": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/industryActivityCode-schema"
              }
            ],
            "x-sorting": "0170"
          },
          "providerSpecificData": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/providerSpecificData-schema"
              }
            ],
            "x-sorting": "0180"
          },
          "sources": {
            "title": "sources",
            "description": "Sources object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sourceProvider-schema"
            },
            "x-sorting": "0220"
          },
          "version": {
            "description": "company-v2.0",
            "type": "string",
            "x-sorting": "0300"
          },
          "additionalData": {
            "$ref": "#/components/schemas/additionalData-schema"
          }
        },
        "type": "object"
      },
      "datasetCompanyLevContent-schema": {
        "title": "datasetCompanyLevContent",
        "description": "The dataset response for LEV company object.",
        "properties": {
          "kompanyId": {
            "description": "Unique id of company element in subject. Static for a company for the lifetime.",
            "type": "string",
            "example": "B3F56CBD8A61B7744D7670610F639C8A",
            "x-sorting": "0010"
          },
          "countryCode": {
            "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
            "type": "string",
            "example": "AT,US-DE",
            "x-sorting": "0020"
          },
          "countryName": {
            "description": "The name of the country where the company is registered.",
            "type": "string",
            "example": "Austria",
            "x-sorting": "0021"
          },
          "state": {
            "description": "This is the specific state being represented in the United States.",
            "type": "string",
            "example": "Alabama",
            "x-sorting": "0022"
          },
          "registrationNumber": {
            "description": "Registration number of a company preceeded by the country code.",
            "type": "string",
            "example": "340561a",
            "x-sorting": "0030"
          },
          "name": {
            "description": "Name of the legal entity.",
            "type": "string",
            "example": "Moody's Analytics Austria GmbH",
            "x-sorting": "0040"
          },
          "status": {
            "description": "The current status of the company, derived from registry data, mapped categories.",
            "type": "string",
            "enum": [
              "LIVE",
              "CLOSED",
              "NOT REPORTED"
            ],
            "x-sorting": "0050"
          },
          "providedStatus": {
            "description": "The legal status of the company. In original language in cases where it is provided by the register.",
            "type": "string",
            "x-sorting": "0060"
          },
          "addresses": {
            "description": "Official address of the company.",
            "type": "array",
            "items": {
              "properties": {
                "addressLine": {
                  "description": "Returns the type of address listed in the 'addressLine' field.",
                  "type": "string",
                  "example": "Floragasse 7, 1040, Wien, AUT"
                },
                "addressType": {
                  "description": "Returns the type of address listed in the 'address' field.",
                  "type": "string",
                  "example": "Registered Address"
                }
              },
              "type": "object"
            },
            "x-sorting": "0070"
          },
          "legalForm": {
            "description": "The legal form of the company. In original language in cases where it is provided by the Register.",
            "type": "string",
            "x-sorting": "0080"
          },
          "standardisedLegalForm": {
            "description": "The standardised version of the company's national legal form.",
            "type": "string",
            "x-sorting": "0090"
          },
          "entityType": {
            "description": "Entities are given a 'type' according to the classification.",
            "type": "string",
            "enum": [
              "Insurance company",
              "Private equity firm",
              "Venture capital",
              "Public authority/State/Government",
              "Financial company",
              "Hedge fund",
              "Foundation/Research institute",
              "Bank",
              "Corporate",
              "Mutual and pension fund/Nominee/Trust/Trustee",
              "Marine vessels",
              "Small company",
              "Medium sized company",
              "Very large company"
            ],
            "x-sorting": "0100"
          },
          "otherNames": {
            "properties": {
              "englishNames": {
                "description": "The name of the company in English, if different from the official name.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "alsoKnownAs": {
                "description": "Any other names the company is known as.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "previousNames": {
                "description": "Any previous name of the company.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object",
            "x-sorting": "0110"
          },
          "otherIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/otherIdentifier-schema"
            },
            "x-sorting": "0120"
          },
          "legalEvents": {
            "properties": {
              "incorporationDate": {
                "description": "The date the company was incorporated. This date is same as or earlier than the registration date.",
                "type": "string"
              },
              "registrationDate": {
                "description": "The date the company was registered. This date is same as or after the incorporation date.",
                "type": "string"
              },
              "dissolutionDate": {
                "description": "The date the company was dissolved",
                "type": "string"
              }
            },
            "type": "object",
            "x-sorting": "0130"
          },
          "associatedEntities": {
            "nullable": true,
            "description": "Associated entities object.",
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/associatedEntities-schema"
              }
            ],
            "x-sorting": "0140"
          },
          "registrationAuthority": {
            "description": "The name of the authority that registered the company.",
            "type": "string",
            "x-sorting": "0150"
          },
          "industryActivityCode": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/industryActivityCode-schema"
              }
            ],
            "x-sorting": "0170"
          },
          "screening": {
            "allOf": [
              {
                "$ref": "#/components/schemas/screening-schema"
              }
            ],
            "x-sorting": "0180"
          },
          "productRegisterReport": {
            "properties": {
              "orderId": {
                "description": "Unique id of the order.",
                "type": "string"
              },
              "orderInfo": {
                "description": "URL to retrieve metadata for the order.",
                "type": "string"
              },
              "orderContent": {
                "description": "URL to retrieve the result (content) of the order.",
                "type": "string"
              }
            },
            "type": "object",
            "x-sorting": "0190"
          },
          "pdfExtract": {
            "properties": {
              "orderId": {
                "description": "Unique id of the order.",
                "type": "string"
              },
              "orderInfo": {
                "description": "URL to retrieve metadata for the order.",
                "type": "string"
              },
              "orderContent": {
                "description": "URL to retrieve the result (content) of the order.",
                "type": "string"
              }
            },
            "type": "object",
            "x-sorting": "0200"
          },
          "calculatedBeneficialOwnershipPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calculatedBeneficialOwnershipPath-schema"
            },
            "x-sorting": "0210"
          },
          "sources": {
            "title": "sources",
            "description": "Sources object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sourceProvider-schema"
            },
            "x-sorting": "0220"
          },
          "version": {
            "description": "kyb-v2.0",
            "type": "string",
            "x-sorting": "0300"
          },
          "additionalData": {
            "$ref": "#/components/schemas/additionalData-schema"
          }
        },
        "type": "object"
      },
      "screening-schema": {
        "title": "screening",
        "properties": {
          "sanctioned": {
            "description": "Boolean that indicates whether the entity has been flagged as Sanctioned.",
            "type": "boolean"
          },
          "watchlist": {
            "description": "Boolean that indicates whether the entity has been flagged as appearing on a Watchlist.",
            "type": "boolean"
          },
          "pep": {
            "description": "Boolean that indicates whether the entity has been flagged as a Politically Exposed Person.",
            "type": "boolean"
          },
          "adverseMedia": {
            "description": "Boolean that indicates whether the entity has been flagged as appearing in Adverse Media.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "formattedAddress-schema": {
        "title": "formattedAddress",
        "description": "Object providing address representation in a standardized way, with all properties optional and subject to variation across jurisdictions, accommodating global address formats.",
        "properties": {
          "careOf": {
            "description": "The addressee of the entity's address.",
            "type": "string",
            "example": "Jonathan Messerschmidt"
          },
          "number": {
            "description": "The number of the entity's address.",
            "type": "string",
            "example": "129"
          },
          "box": {
            "description": "The box of the entity's address.",
            "type": "string",
            "example": "Boîte 5"
          },
          "poBox": {
            "description": "The poBox of the entity's address.",
            "type": "string",
            "example": "94"
          },
          "addressLine1": {
            "description": "The addressLine1 of the entity's address.",
            "type": "string",
            "example": "13334 SOUTHSHORE DR"
          },
          "addressLine2": {
            "description": "The addressLine2 of the entity's address.",
            "type": "string",
            "example": "FAS BUSINESS AVENUE 1 JALAN PERBANDARAN,P.JAYA"
          },
          "street": {
            "description": "The street of the entity's address.",
            "type": "string",
            "example": "13334 SOUTHSHORE DR"
          },
          "postCode": {
            "description": "The postcode of the entity's address.",
            "type": "string",
            "example": "47520"
          },
          "zip": {
            "description": "ZIP code of the entity's  address.",
            "type": "string",
            "example": "1040"
          },
          "district": {
            "description": "The district of the entity's address.",
            "type": "string",
            "example": "Edmonton"
          },
          "city": {
            "description": "The city of the entity's address.",
            "type": "string",
            "example": "CONROE"
          },
          "prefecture": {
            "description": "The prefecture of the entity's address.",
            "type": "string",
            "example": "Tokyo-to"
          },
          "region": {
            "description": "The region of the entity's address.",
            "type": "string",
            "example": "København Ø"
          },
          "state": {
            "description": "The State in which an entities address is located, when it is located in the United States;",
            "type": "string",
            "example": "TX"
          },
          "country": {
            "description": "The ISO code of the country  of the entity's address, according the ISO 3166-1 alpha-2 standard.",
            "type": "string",
            "example": "England"
          },
          "countryCode": {
            "description": "Country code of the address provided by jurisdiction.",
            "type": "string",
            "example": "US"
          },
          "extra": {
            "description": "The extra information of the entity's address.",
            "type": "string",
            "example": "KØBENHAVN"
          },
          "addon": {
            "description": "Additional line specifying the department, office, or unit number within a larger complex or building.",
            "type": "string",
            "example": "Aargau Services Standortförderung"
          },
          "extraAddressDetails": {
            "description": "Additional address details.",
            "properties": {
              "endDate": {
                "description": "The end date of the entity's address.",
                "type": "string",
                "example": "2020-12-31"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "jointShareholders-schema": {
        "title": "jointShareholder",
        "description": "JointShareholder data object.",
        "properties": {
          "shareCapitals": {
            "description": "The capital contributed by the shareholder. Depending on what the source is providing, the list can have more or less properties (available in Australia)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareCapitalItem-schema"
            }
          },
          "shareCurrency": {
            "description": "The currency of the share.",
            "type": "number"
          },
          "sharePercentage": {
            "description": "The percentage of the share compared to the total.",
            "type": "number"
          },
          "role": {
            "description": "The role of the joint shareholders within the company.",
            "type": "string"
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareholders-schema"
            }
          }
        },
        "type": "object"
      },
      "leiDetails-schema": {
        "title": "leiDetails",
        "description": "lei Details data object.",
        "properties": {
          "leiLegalEntityIdentifier": {
            "description": "LEI identifier.",
            "type": "string"
          },
          "issuedDate": {
            "description": "The date of the LEI assignment, the field is only visible if the identifierName is LEI.",
            "type": "string"
          },
          "renewalDate": {
            "description": "The date of the LEI annual renewal, the field is only visible if the identifierName is LEI.",
            "type": "string"
          },
          "leiStatus": {
            "description": "The LEI status, the field is only visible if the identifierName is LEI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "officers-schema": {
        "title": "officer",
        "properties": {
          "name": {
            "description": "The name of the associated entity in the company.",
            "type": "string",
            "x-sorting": "0010"
          },
          "membershipDate": {
            "description": "The date the officer started the membership.",
            "type": "string",
            "x-sorting": "0020"
          },
          "role": {
            "description": "The role of the associated entity within the company.",
            "type": "string",
            "x-sorting": "0023"
          },
          "providedRole": {
            "description": "The role of the associated entity within the company. In original language in cases where it is provided by the Register.",
            "type": "string",
            "x-sorting": "0031"
          },
          "isCorporate": {
            "description": "Boolean indicating whether the associated entity is a corporate entity.",
            "type": "boolean",
            "x-sorting": "0041"
          },
          "registrationNumber": {
            "description": "The registration number of a associated entity.",
            "type": "string",
            "x-sorting": "0052"
          },
          "address": {
            "description": "The address associated with the associated entity.",
            "type": "string",
            "x-sorting": "0070"
          },
          "startDate": {
            "description": "The date the associated entity started their role.",
            "type": "string",
            "x-sorting": "0080"
          },
          "endDate": {
            "description": "The date the associated entity ended their role.",
            "type": "string",
            "x-sorting": "0090"
          },
          "dateOfBirth": {
            "description": "The date of birth of the associated entity.",
            "type": "string",
            "x-sorting": "0100"
          },
          "nationality": {
            "description": "The nationality of the associated entity.",
            "type": "string",
            "x-sorting": "0110"
          },
          "identityDocument": {
            "description": "The identity document of the associated entity.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-sorting": "0120"
          },
          "personalId": {
            "description": "The personalId of the associated entity.",
            "type": "string",
            "x-sorting": "0130"
          },
          "residenceCountry": {
            "description": "The residence country of the associated entity.",
            "type": "string",
            "x-sorting": "0140"
          },
          "additionalAssociatedEntityData": {
            "$ref": "#/components/schemas/additionalAssociatedEntityData-officer-schema"
          }
        },
        "type": "object"
      },
      "otherIdentifier-schema": {
        "title": "otherIdentifier",
        "description": "OtherIdentifier data object.",
        "properties": {
          "identifierName": {
            "description": "The type of the identifier.",
            "type": "string"
          },
          "identifierValue": {
            "description": "The value of the identifier.",
            "type": "string"
          },
          "issuedDate": {
            "description": "The date of the LEI assignment, the field is only visible if the identifierName is LEI.",
            "type": "string"
          },
          "renewalDate": {
            "description": "The date of the LEI annual renewal, the field is only visible if the identifierName is LEI.",
            "type": "string"
          },
          "leiStatus": {
            "description": "The LEI status, the field is only visible if the identifierName is LEI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "providerSpecificData-schema": {
        "title": "providerSpecificData",
        "description": "Provider specific data object.",
        "properties": {
          "dateOfLicense": {
            "description": "It is a specific date on which a business was officially granted its operating license or permit by the relevant regulatory authority.",
            "type": "string"
          },
          "nextDueDate": {
            "description": "Indicates the future date up to which the next set of financial statements will be prepared.",
            "type": "string"
          },
          "madeUpDate": {
            "description": "Indicates the most recent date for which the company's financial statements have been prepared.",
            "type": "string"
          },
          "lastAnnouncementDate": {
            "description": "Refers to the most recent date on which the company made an official announcement or filing to the registry.",
            "type": "string"
          },
          "authorizedCapital": {
            "description": "Refers to the maximum amount of share capital that a company is legally allowed to issue to shareholders, as specified in its corporate charter or articles of incorporation.",
            "type": "string"
          },
          "latestAccounts": {
            "$ref": "#/components/schemas/latestAccounts-schema"
          },
          "asic": {
            "description": "Refers to a unique identifier assigned by the Australian Securities & Investments Commission to a company or business entity for regulatory and identification purposes.",
            "type": "string"
          },
          "abn": {
            "description": "Refers to a unique 11-digit identifier issued by the Australian Business Register to all businesses in Australia for taxation and other business-related activities.",
            "type": "string"
          },
          "code": {
            "description": "Indicates the prefix used in Cyprus company registration number.",
            "type": "string"
          },
          "pesel": {
            "description": "Refers to a unique 11-digit national identification number assigned to individuals for use in governmental, administrative, and business registry processes, not directly applicable to businesses but to individuals, including sole proprietors.",
            "type": "string"
          },
          "regon": {
            "description": "REGON (Regionalny Ewidencji Gospodarczej) is a 9-digit identification number used in Poland to register legal entities and individuals and their activities.",
            "type": "string"
          },
          "siretNumber": {
            "description": "Refers to a 14-digit code used to uniquely identify each physical location of a business for administrative and regulatory purposes within the national business registry.",
            "type": "string"
          },
          "isHeadquarter": {
            "description": "Refers to a boolean value, when true, signifies the company entry represents the main office or central headquarters, and when false, indicates the entry is not the headquarters but rather a branch or subsidiary location.",
            "type": "boolean"
          },
          "exchange": {
            "description": "Refers to a marketplace where securities, such as stocks and bonds, are bought and sold, and the term is used to categorize and identify the specific trading platform on which a company's securities are listed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jurisdiction": {
            "description": "Specifies the state in which a company was initially incorporated or legally established.",
            "type": "string"
          },
          "residency": {
            "description": "Refers to classification of a company based on its primary location of operation or incorporation within the country. Possible values are domestic or foreign.",
            "type": "string"
          },
          "fiscalYearEnd": {
            "description": "Indicates the date marking the end of a company's accounting year, upon which its annual financial reports are based.",
            "type": "string"
          },
          "insiderTransactionForOwnerExists": {
            "description": "Signifies whether there have been any financial transactions involving the company's stock conducted by its executives, directors, or significant shareholders.",
            "type": "string"
          },
          "insiderTransactionForIssuerExists": {
            "description": "Indicates whether there have been any reported transactions involving the company's securities carried out by insiders, such as executives or major shareholders, on behalf of the company itself.",
            "type": "string"
          },
          "category": {
            "description": "Describes the classification of the latest set of financial statements, e.g., 'dormant' indicates no significant accounting transactions.",
            "type": "string"
          },
          "stateOfIncorporationDescription": {
            "description": "Refers to the text detailing the specific U.S. state under whose laws the company is registered or incorporated.",
            "type": "string"
          },
          "entityType": {
            "description": "Entities are given a 'type' according to the following classification: Insurance company, NULL, Private equity firm, Venture capital, Public authority/State/Government, Financial company, Hedge fund, Foundation/Research institute, Bank, Corporate, Mutual and pension fund/Nominee/Trust/Trustee, Marine vessels, Small company, Medium sized company, Very large company",
            "type": "string"
          },
          "businessLicences": {
            "description": "Refers to the official permits or licenses a company holds, indicating the range or scope of activities it is legally authorized to conduct.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/businessLicenceItems-schema"
            }
          },
          "signatoryRights": {
            "description": "Authority granted to an individual to enter into contracts on behalf of a legal entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shareCapitalItem-schema": {
        "title": "shareCapitalItem",
        "properties": {
          "numberOfShares": {
            "description": "The number of shares owned by the shareholder.",
            "type": "string"
          },
          "shareType": {
            "description": "The type of share owned by the shareholder.",
            "type": "string"
          },
          "percentage": {
            "description": "The percentage of shares owned by the shareholder.",
            "type": "string"
          },
          "isBeneficiallyOwned": {
            "description": "Boolean indicating whether the shares are beneficially owned.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shareholders-schema": {
        "title": "shareholder",
        "properties": {
          "name": {
            "description": "The name of the associated entity in the company.",
            "type": "string",
            "x-sorting": "0010"
          },
          "role": {
            "description": "The role of the associated entity within the company.",
            "type": "string",
            "x-sorting": "0023"
          },
          "providedRole": {
            "description": "The role of the associated entity within the company. In original language in cases where it is provided by the Register.",
            "type": "string",
            "x-sorting": "0031"
          },
          "isCorporate": {
            "description": "Boolean indicating whether the associated entity is a corporate entity.",
            "type": "boolean",
            "x-sorting": "0041"
          },
          "registrationNumber": {
            "description": "The registration number of a associated entity.",
            "type": "string",
            "x-sorting": "0052"
          },
          "legalForm": {
            "description": "The associated entity's legal form.",
            "type": "string",
            "x-sorting": "0060"
          },
          "address": {
            "description": "The address associated with the associated entity.",
            "type": "string",
            "x-sorting": "0070"
          },
          "startDate": {
            "description": "The date the associated entity started their role.",
            "type": "string",
            "x-sorting": "0080"
          },
          "endDate": {
            "description": "The date the associated entity ended their role.",
            "type": "string",
            "x-sorting": "0090"
          },
          "dateOfBirth": {
            "description": "The date of birth of the associated entity.",
            "type": "string",
            "x-sorting": "0100"
          },
          "nationality": {
            "description": "The nationality of the associated entity.",
            "type": "string",
            "x-sorting": "0110"
          },
          "identityDocument": {
            "description": "The identity document of the associated entity.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-sorting": "0120"
          },
          "personalId": {
            "description": "The personalId of the associated entity.",
            "type": "string",
            "x-sorting": "0130"
          },
          "residenceCountry": {
            "description": "The residence country of the associated entity.",
            "type": "string",
            "x-sorting": "0140"
          },
          "shareNumber": {
            "description": "The number of shares owned by the shareholder.",
            "type": "string",
            "x-sorting": "0150"
          },
          "sharePercentage": {
            "description": "The total share percentage owned by the shareholder in the subject entity.",
            "type": "number",
            "x-sorting": "0160"
          },
          "sharePercentageRange": {
            "description": "The range of share percentage owned by the shareholder as recorded in the Register.",
            "type": "string",
            "x-sorting": "0170"
          },
          "sharePercentageDirect": {
            "description": "The direct share percentage owned by the shareholder.",
            "type": "string",
            "x-sorting": "0180"
          },
          "sharePercentageTotal": {
            "description": "The total share percentage owned by the shareholder in the subject entity.",
            "type": "string",
            "x-sorting": "0190"
          },
          "shareCapitals": {
            "description": "The capital contributed by the shareholder. Depending on what the source is providing, the list can have more or less properties (available in Australia)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shareCapitalItem-schema"
            },
            "x-sorting": "0200"
          },
          "shareCurrency": {
            "description": "The currency of the share capital.",
            "type": "string",
            "x-sorting": "0210"
          },
          "additionalAssociatedEntityData": {
            "$ref": "#/components/schemas/additionalAssociatedEntityData-shareholder-schema"
          }
        },
        "type": "object"
      },
      "callback-schema": {
        "title": "callback",
        "description": "Callback request model.",
        "required": [
          "callBackType",
          "callBackUrl"
        ],
        "allOf": [
          {
            "properties": {
              "callBackType": {
                "description": "The method how client wants to be notified.",
                "type": "string",
                "enum": [
                  "stream",
                  "webhook-post",
                  "webhook-get"
                ],
                "example": "webhook-get"
              },
              "callBackUrl": {
                "description": "The url where callBack notification will be sent.",
                "type": "string",
                "example": "https://xyz.com/x/y/z/callback-path"
              }
            }
          },
          {
            "$ref": "#/components/schemas/callbackType-schema"
          }
        ]
      },
      "callbackType-schema": {
        "title": "callbackType",
        "description": "Current settings for the certain callback type.",
        "required": [
          "affectedService"
        ],
        "properties": {
          "affectedService": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "createMonitorSetting-schema": {
        "title": "createMonitorSetting",
        "description": "Monitor frequency setting  model.",
        "required": [
          "datasetName",
          "frequency",
          "countryCode"
        ],
        "properties": {
          "countryCode": {
            "nullable": true,
            "type": "string"
          },
          "datasetName": {
            "description": "The type of dataset (e.g. REFRESH, LEV, ENHANCED).",
            "type": "string"
          },
          "frequency": {
            "description": "The desired frequency for each dataset. Default values: 7 for refresh; 30 for enhanced, 7 for lev.",
            "type": "integer",
            "example": "10"
          }
        },
        "type": "object"
      },
      "industryActivityCode-schema": {
        "title": "industryActivityCode",
        "description": "Industry activity code object.",
        "properties": {
          "activityCodes": {
            "description": "Field of activity of the subject entity as a single string.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "structuredActivityCodes": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "description": "Classification code of the activity of the subject entity.",
                  "type": "string"
                },
                "description": {
                  "description": "Field of activity of the subject entity.",
                  "type": "string"
                },
                "industryClassification": {
                  "description": "Name of the industry classification framework.",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the industry classification framework.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "activity": {
            "description": "The description of the industry activities of the company, as recorded in the Register.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "searchFormattedResultModel-schema": {
        "title": "companySearch",
        "description": "Response structure of indexSearch and liveSearch.",
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "searchMethod": {
            "$ref": "#/components/schemas/searchMethod-schema"
          },
          "searchValue": {
            "$ref": "#/components/schemas/searchValue-schema"
          },
          "searchId": {
            "description": "Unique id of the search request.",
            "type": "string",
            "example": "F75E3FE5C94019930B4195F667738D6C"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "alternativeSource": {
            "description": "Name of the alternative source (e.g. GISA, VR, ABR, EDGAR).",
            "type": "string",
            "example": "GISA"
          },
          "strictSearch": {
            "description": "Boolean parameter for wider range of results.",
            "type": "boolean",
            "example": "true"
          },
          "limit": {
            "description": "The dataset list query limit. Default is 10.",
            "type": "integer",
            "example": "10"
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "searchResults": {
            "type": "array",
            "items": {
              "properties": {
                "kompanyId": {
                  "description": "Unique id of company element in subject. Static for a company for the lifetime.",
                  "type": "string"
                },
                "countryCode": {
                  "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
                  "type": "string"
                },
                "countryName": {
                  "description": "The name of the country where the company is registered.",
                  "type": "string"
                },
                "registrationNumber": {
                  "description": "Registration number of the company.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the legal entity.",
                  "type": "string"
                },
                "status": {
                  "description": "The current status of the company.",
                  "type": "string"
                },
                "address": {
                  "description": "Official address of the company.",
                  "type": "string"
                },
                "additionalData": {
                  "description": "Additional data object.",
                  "properties": {
                    "otherNames": {
                      "$ref": "#/components/schemas/otherNames-schema"
                    }
                  },
                  "type": "object"
                },
                "sources": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sourceProvider-schema"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "sourceProvider-schema": {
        "title": "sourceProvider",
        "description": "Response structure of the data source provider.",
        "properties": {
          "name": {
            "description": "Name of the source.",
            "type": "string",
            "example": "Data Source"
          },
          "info": {
            "description": "Additional information on the source.",
            "type": "string"
          },
          "primary": {
            "description": "If the source is considered as the main provider of the particular country or service.",
            "type": "boolean",
            "example": "true"
          },
          "fields": {
            "description": "List of the fields that have been populated of the particular source. Star (*) stands for all the fields, except the ones that are listed up for other fields.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": "[*]"
          },
          "lastCheckedTime": {
            "description": "The certain point of time when the data was last time checked against the source (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string",
            "example": "2022-11-16T11:26:33+00:00"
          }
        },
        "type": "object"
      },
      "businessLicenceItems-schema": {
        "title": "businessLicenceItems",
        "properties": {
          "scopeOfBusiness": {
            "description": "Refers to the range of activities and operations that a company is authorized to conduct, as defined in its registration documents.",
            "type": "string"
          },
          "interruption": {
            "description": "Refers to a temporary halt or disruption in the company's authorized activities, as recorded in the registry.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "branches-schema": {
        "title": "branch",
        "properties": {
          "name": {
            "description": "The official name of the branch within the company.",
            "type": "string"
          },
          "otherNames": {
            "description": "Alternate or previously used names of the branch.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "number": {
            "description": "The unique identifier or number assigned to the branch.",
            "type": "string"
          },
          "providedStatus": {
            "description": "The status of the branch as provided by the Register.",
            "type": "string"
          },
          "status": {
            "description": "The current operational status of the branch, e.g., active, closed.",
            "type": "string"
          },
          "structuredActivityCodes": {
            "description": "| null",
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "description": "Classification code of the activity of the subject entity.",
                  "type": "string"
                },
                "description": {
                  "description": "Field of activity of the subject entity.",
                  "type": "string"
                },
                "industryClassification": {
                  "description": "Name of the industry classification framework.",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the industry classification framework.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "activity": {
            "description": "Field of activity of the subject entity.",
            "type": "string"
          },
          "address": {
            "description": "The physical location details of the branch.",
            "type": "string"
          },
          "formattedAddress": {
            "$ref": "#/components/schemas/formattedAddress-schema"
          },
          "legalType": {
            "description": "The legal form or structure of the branch, e.g., LLC, partnership.",
            "type": "string"
          },
          "taxNumber": {
            "description": "The tax identification number assigned to the branch for tax purposes.",
            "type": "string"
          },
          "vat": {
            "description": "The value-added tax (VAT) registration number of the branch.",
            "type": "string"
          },
          "shareCapital": {
            "description": "The amount of share capital registered for the branch.",
            "type": "string"
          },
          "code": {
            "description": "A unique code or identifier used internally or externally to reference the branch.",
            "type": "string"
          },
          "registrationInstitution": {
            "description": "The institution where the company was registered.",
            "type": "string"
          },
          "officers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/officers-schema"
            }
          },
          "dissolutionDate": {
            "description": "The date of dissolution of the branch.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "contactInformation-schema": {
        "title": "contactInformation",
        "description": "Contanct information object.",
        "properties": {
          "contactAddress": {
            "description": "Extra address of the contact.",
            "type": "string"
          },
          "website": {
            "description": "Website url of the entity.",
            "type": "string"
          },
          "email": {
            "description": "Email of the entity.",
            "type": "string"
          },
          "phone": {
            "description": "Phone number of the entity.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "twitter": {
            "description": "Twitter account of the entity.",
            "type": "string"
          },
          "linkedin": {
            "description": "LinkedIn account of the entity.",
            "type": "string"
          },
          "formattedAddress": {
            "$ref": "#/components/schemas/formattedAddress-schema"
          },
          "tradingAddress": {
            "description": "The trading address of the company.",
            "type": "string"
          },
          "formattedTradingAddress": {
            "$ref": "#/components/schemas/formattedAddress-schema"
          }
        },
        "type": "object"
      },
      "otherNames-schema": {
        "title": "otherNames",
        "description": "Other names object.",
        "properties": {
          "otherNames": {
            "description": "Any other name of the company.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "oldNames": {
            "description": "Any old name of the company.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "englishNames": {
            "description": "The name of the company in English, if different from the official name.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "localNames": {
            "description": "Any other local name of the company.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "shares-schema": {
        "title": "shares",
        "properties": {
          "numberOfShares": {
            "description": "The total count of shares that have been issued by the company.",
            "type": "number"
          },
          "shareCapitals": {
            "description": "The capital contributed by the shareholders.",
            "type": "string"
          },
          "shareDescription": {
            "description": "A detailed explanation or characteristics of the shares issued.",
            "type": "string"
          },
          "shareType": {
            "description": "Type of shares held by the shareholders.",
            "type": "string"
          },
          "sharePrice": {
            "description": "The price at which each share is issued or can be bought.",
            "type": "number"
          },
          "paidUpCapital": {
            "description": "Amount of capital that has been paid in by shareholders.",
            "type": "string"
          },
          "shareCurrency": {
            "description": "The currency in which the shares are issued.",
            "type": "string"
          },
          "authorizedCapital": {
            "description": "Authorized capital provided by the source.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "announcementRequest-schema": {
        "title": "announcementRequest",
        "description": "Company announcement validation and request schema.",
        "required": [
          "kompanyId"
        ],
        "properties": {
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          }
        },
        "type": "object"
      },
      "announcementResponse-schema": {
        "title": "announcement",
        "description": "Response structure of announcement.",
        "properties": {
          "announcementId": {
            "description": "Unique id of the announcement.",
            "type": "string",
            "example": "17F9B790830D362237E209626649CBF1"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "registrationNumber": {
            "description": "Registration number of the company.",
            "type": "string",
            "example": "AT/01234567"
          },
          "announcementType": {
            "description": "Type of published announcement (e.g. MODIFICATION).",
            "type": "string"
          },
          "announcementText": {
            "description": "Text of published announcement.",
            "type": "string"
          },
          "publicationDate": {
            "description": "Date of published announcement (e.g. ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object"
      },
      "datasetRequest-schema": {
        "title": "datasetRequest",
        "description": "The dataset request object schema.",
        "required": [
          "datasetName",
          "kompanyId"
        ],
        "properties": {
          "datasetName": {
            "$ref": "#/components/schemas/datasetName-schema"
          },
          "datasetOptions": {
            "$ref": "#/components/schemas/datasetOptionsRequest-schema"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          }
        },
        "type": "object"
      },
      "datasetListRequest-schema": {
        "title": "datasetListRequest",
        "description": "The dataset list request object schema.",
        "properties": {
          "offset": {
            "description": "The dataset list query offset. Default is 0.",
            "type": "integer",
            "example": "0"
          },
          "limit": {
            "description": "The dataset list query limit. Default is 10.",
            "type": "integer",
            "example": "10"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "datasetName": {
            "$ref": "#/components/schemas/datasetName-schema"
          },
          "requestTimeFrom": {
            "$ref": "#/components/schemas/requestTimeFrom-schema"
          },
          "requestTimeTo": {
            "$ref": "#/components/schemas/requestTimeTo-schema"
          }
        },
        "type": "object"
      },
      "datasetOptionsRequest-schema": {
        "title": "datasetOptions",
        "description": "Additional parameter for the dataset request.",
        "properties": {
          "addPdfExtract": {
            "description": "Check true if you also want the data to be presented in a structured PDF document.",
            "type": "boolean",
            "example": "true"
          },
          "addProductRegisterReport": {
            "description": "Check true if you also want to order the register report from the official registry (if it's available).",
            "type": "boolean",
            "example": "true"
          },
          "language": {
            "$ref": "#/components/schemas/language-schema"
          }
        },
        "type": "object"
      },
      "enhancedDatasetRequest-schema": {
        "title": "enhancedDatasetRequest",
        "description": "The enhanced request object schema.",
        "required": [
          "kompanyId",
          "enhancedOptions"
        ],
        "properties": {
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "enhancedOptions": {
            "$ref": "#/components/schemas/enhancedOptions-schema"
          }
        },
        "type": "object"
      },
      "enhancedOptions-schema": {
        "title": "enhancedOptions",
        "description": "Additional parameter for the enhanced request.",
        "properties": {
          "generalData": {
            "description": "Boolean parameter if generalData is requested.",
            "type": "boolean",
            "example": "true"
          },
          "stakeholders": {
            "description": "Boolean parameter if stakeholders is requested.",
            "type": "boolean",
            "example": "true"
          },
          "shareholders": {
            "description": "Boolean parameter if shareholders is requested.",
            "type": "boolean",
            "example": "true"
          },
          "beneficialOwners": {
            "description": "Boolean parameter if beneficialOwners is requested.",
            "type": "boolean",
            "example": "true"
          },
          "suppressRefresh": {
            "description": "Boolean parameter to avoid the refresh call.",
            "type": "boolean",
            "example": "true"
          },
          "language": {
            "$ref": "#/components/schemas/language-schema"
          }
        },
        "type": "object"
      },
      "latestAccounts-schema": {
        "title": "latestAccounts",
        "description": "LatestAccounts data object.",
        "properties": {
          "category": {
            "description": "Describes the classification of the latest set of financial statements, e.g., 'dormant' indicates no significant accounting transactions.",
            "type": "string"
          },
          "lastMadeUpDate": {
            "description": "Indicates the most recent date for which the company's financial statements have been prepared.",
            "type": "string"
          },
          "nextDueDate": {
            "description": "Indicates the future date up to which the next set of financial statements will be prepared.",
            "type": "string"
          },
          "overdue": {
            "description": "A general boolean value indicating if any required filings are past their submission deadline (false means nothing is overdue).",
            "type": "boolean"
          },
          "referenceDate": {
            "description": "Specifies the annual date by which a business must prepare its financial statements.",
            "type": "string"
          },
          "madeUpDate": {
            "description": "Indicates the most recent date for which the company's financial statements have been prepared.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "idSearchRequest-schema": {
        "title": "idSearchRequest",
        "description": "The search request object schema.",
        "required": [
          "searchValue"
        ],
        "properties": {
          "searchValue": {
            "$ref": "#/components/schemas/searchValue-schema"
          },
          "alternativeSource": {
            "$ref": "#/components/schemas/searchValue-schema"
          }
        },
        "type": "object"
      },
      "indexSearchRequest-schema": {
        "title": "indexSearchRequest",
        "description": "The index search request object schema.",
        "required": [
          "searchMethod",
          "searchValue"
        ],
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "searchMethod": {
            "$ref": "#/components/schemas/searchMethod-schema"
          },
          "searchValue": {
            "$ref": "#/components/schemas/searchValue-schema"
          },
          "alternativeSource": {
            "description": "Name of the alternative source (e.g. GISA, VR, ABR, EDGAR).",
            "type": "string",
            "example": "GISA"
          },
          "strictSearch": {
            "description": "Boolean parameter for wider range of results.",
            "type": "boolean",
            "example": "true"
          },
          "limit": {
            "description": "The number of maximum results can be set with this option between 1 and 100.",
            "type": "integer",
            "example": "10"
          }
        },
        "type": "object"
      },
      "liveSearchRequest-schema": {
        "title": "liveSearchRequest",
        "description": "The live search request object schema.",
        "required": [
          "searchMethod",
          "searchValue",
          "countryCode"
        ],
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "searchMethod": {
            "$ref": "#/components/schemas/searchMethod-schema"
          },
          "searchValue": {
            "$ref": "#/components/schemas/searchValue-schema"
          },
          "alternativeSource": {
            "description": "Name of the alternative source (e.g. GISA, VR, ABR, EDGAR).",
            "type": "string",
            "example": "GISA"
          },
          "strictSearch": {
            "description": "Boolean parameter for wider range of results.",
            "type": "boolean",
            "example": "true"
          },
          "limit": {
            "description": "The number of maximum results can be set with this option between 1 and 100.",
            "type": "integer",
            "example": "10"
          }
        },
        "type": "object"
      },
      "changeByIdResponse-schema": {
        "title": "monitorChangeByIdResponse",
        "description": "Describes the detail of a change for specific monitor.",
        "properties": {
          "monitorId": {
            "description": "Id of a monitor in string.",
            "type": "string",
            "example": "17F9B790830D362237E209626649CBF1"
          },
          "changeId": {
            "description": "Id of a change for a monitor.",
            "type": "string",
            "example": "17F9B790830D362237E209626649CBF1"
          },
          "monitorChangeTypes": {
            "description": "Type of the monitor (e.g. status, address).",
            "type": "array",
            "items": {
              "type": "string",
              "example": "address"
            },
            "example": "address"
          },
          "content": {
            "type": "object",
            "discriminator": {
              "propertyName": "version",
              "mapping": {
                "company-v2.0": "#/components/schemas/datasetCompanyContent-schema",
                "kyb-v2.0": "#/components/schemas/datasetCompanyLevContent-schema"
              }
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/datasetCompanyContent-schema"
              },
              {
                "$ref": "#/components/schemas/datasetCompanyLevContent-schema"
              }
            ]
          },
          "monitorStatus": {
            "description": "Current monitor status.",
            "type": "string",
            "example": "DELETED"
          },
          "announcementId": {
            "description": "Id of an announcement.",
            "type": "string",
            "example": "17F9B790830D362237E209626649CAFD"
          },
          "changeTime": {
            "description": "ISO 8601 format of YYYY-MM-DDThh:mm:ssZ.",
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object"
      },
      "monitorChangeHistory-schema": {
        "title": "monitorChangeHistory",
        "description": "Describes the detail of a change for specific monitor.",
        "properties": {
          "changeId": {
            "description": "Id of a change for a monitor.",
            "type": "string",
            "example": "17F9B790830D362237E209626649CBF1"
          },
          "monitorChangeTypes": {
            "description": "Type of the monitor (e.g. status, address).",
            "type": "array",
            "items": {
              "type": "string",
              "example": "address"
            },
            "example": "address"
          },
          "announcementId": {
            "description": "Id of an announcement.",
            "type": "string",
            "example": "17F9B790830D362237E209626649CBF1"
          },
          "changeTime": {
            "description": "ISO 8601 format of YYYY-MM-DDThh:mm:ssZ",
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object"
      },
      "createMonitorRequest-schema": {
        "title": "createMonitorRequest",
        "description": "The monitor request object schema.",
        "required": [
          "kompanyId",
          "monitorChangeTypes"
        ],
        "properties": {
          "monitorChangeTypes": {
            "description": "Array of the desired change types for the monitoring service.",
            "type": "array",
            "items": {
              "description": "A supported type in string.",
              "type": "string",
              "example": "all"
            },
            "example": "['address','activity']"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "datasetName": {
            "description": "The dataset you want to monitor. Defaults to refresh.",
            "type": "string",
            "enum": [
              "refresh",
              "enhanced",
              "lev"
            ]
          },
          "frequency": {
            "description": "The optional desired frequency (in days) for the monitoring service. Defaults to 7.",
            "type": "integer",
            "example": "10"
          }
        },
        "type": "object"
      },
      "monitorResponse-schema": {
        "title": "monitorResponse",
        "description": "Response structure of monitor.",
        "properties": {
          "monitorId": {
            "description": "Unique id of the monitor.",
            "type": "string",
            "example": "17F9B790830D362237E209626649CBF1"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "created": {
            "description": "Datetime when the monitor was created (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "description": "Datetime when the monitor was deleted (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string",
            "format": "date-time"
          },
          "lastCallbackTime": {
            "description": "Datetime when a call back for that monitor was last sent to the user (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string",
            "format": "date-time"
          },
          "changeCount": {
            "description": "The number of times a change has been detected for this entity since the monitor was created.",
            "type": "integer",
            "example": 2
          },
          "monitorChangeTypes": {
            "description": "The desired change types for the monitoring service in a format of array of string(s).",
            "type": "array",
            "items": {
              "type": "string",
              "example": "address"
            },
            "example": "['address', 'activity']"
          },
          "changes": {
            "description": "The history of changes for the entity.",
            "type": "array",
            "items": {
              "type": "object",
              "example": "{changeId: 1234hfdfghdf636523,monitorChangeTypes: [address, legalForm], changeTime: 2023-06-29 22:20:02}"
            },
            "example": "changes: [ChangeHistory ObjectF]"
          },
          "monitorStatus": {
            "description": "The status of the monitor. Possible values are PENDING, CREATED, FIRED, DELETED.",
            "type": "string",
            "example": "PENDING"
          },
          "datasetName": {
            "description": "The type of dataset to be monitored (e.g. REFRESH, ENHANCED, LEV).",
            "type": "string",
            "enum": [
              "refresh",
              "enhanced",
              "lev"
            ],
            "example": "refresh"
          },
          "frequency": {
            "description": "The frequency in dates how this monitor will be updated.",
            "type": "integer",
            "example": 7
          }
        },
        "type": "object"
      },
      "productResponse-schema": {
        "title": "productResponse",
        "description": "Response structure of the product.",
        "properties": {
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          },
          "productCategory": {
            "$ref": "#/components/schemas/productCategory-schema"
          },
          "productName": {
            "description": "The name of the requested product.",
            "type": "string",
            "example": "Document government fee"
          },
          "productDescription": {
            "description": "The description of the requested product.",
            "type": "string",
            "example": "Current company information from the official primary source retrieved in real-time"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "requiresOption": {
            "description": "Boolean field that shows if the order of the product needs a productOptionId.",
            "type": "boolean",
            "example": "true"
          },
          "estimatedDeliverySeconds": {
            "$ref": "#/components/schemas/estimatedDeliverySeconds-schema"
          },
          "orderOptions": {
            "$ref": "#/components/schemas/searchOrderOption-schema"
          },
          "availability": {
            "description": "Boolean field that shows if the product is available.",
            "type": "boolean",
            "example": "true"
          },
          "availabilityCheckStatus": {
            "description": "The availability status which shows that availability is completed with or without an error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "businessConciergeRequest-schema": {
        "title": "businessConciergeRequest",
        "description": "The businessConcierge object schema.",
        "required": [
          "priority",
          "informationRequirements",
          "contactEmail"
        ],
        "properties": {
          "priority": {
            "description": "Priority of order. Possible values are standard and express.",
            "type": "string",
            "example": "standard"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "kompanyId": {
            "description": "Unique id of company element in subject. Static for a company for the lifetime. (Not required if registrationNumber or companyName is given)",
            "type": "string",
            "example": "E41861C895CB1DDDDA93054179FFA172"
          },
          "registrationNumber": {
            "description": "Registration number of a company preceeded by the country code. (Not required if kompanyId or companyName is given)",
            "type": "string",
            "example": "AT/01234567"
          },
          "companyName": {
            "description": "Name of the company for which a document should be ordered. (Not required if kompanyId or registrationNumber is given)",
            "type": "string",
            "example": "360Kompany AG"
          },
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          },
          "generalData": {
            "description": "Boolean parameter if generalData is requested.",
            "type": "boolean",
            "example": "true"
          },
          "financialData": {
            "description": "Boolean parameter if financialData is requested.",
            "type": "boolean",
            "example": "true"
          },
          "historicalData": {
            "description": "Boolean parameter if historicalData is requested.",
            "type": "boolean",
            "example": "true"
          },
          "locationInvestigation": {
            "description": "Boolean parameter if locationInvestigation is requested.",
            "type": "boolean",
            "example": "true"
          },
          "costConfirmation": {
            "description": "Boolean parameter if costConfirmation is requested.",
            "type": "boolean",
            "example": "true"
          },
          "informationRequirements": {
            "description": "Accurate description of the required company information and document type(s).",
            "type": "string",
            "example": "Company information for 360Kompany AG"
          },
          "contactEmail": {
            "description": "Contact email address to be used when application level cost limit has been reached.",
            "type": "string",
            "example": "max.mustermann@mail.com"
          },
          "contactPhone": {
            "description": "Contact phone to be used when application level cost limit has been reached.",
            "type": "string",
            "example": "+4311234567"
          }
        },
        "type": "object"
      },
      "createProductOrderRequest-schema": {
        "title": "createProductOrderRequest",
        "description": "Place and order by certain productId and kompanyId.",
        "required": [
          "kompanyId",
          "productType"
        ],
        "properties": {
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "productOptionId": {
            "$ref": "#/components/schemas/productOptionId-schema"
          }
        },
        "type": "object"
      },
      "createUboOrderRequest-schema": {
        "title": "createUboOrderRequest",
        "description": "Place and order UBO for a supported kompany type by kompanyId.",
        "required": [
          "kompanyId",
          "strategy"
        ],
        "properties": {
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "credits": {
            "description": "Valid amount in Euro [minimum is 1].",
            "type": "integer",
            "example": 50
          },
          "strategy": {
            "description": "Matching strategy. FULL:means all nodes in the tree are in scope of the crawl, LEVELS means only nodes fulfilling the levels thresholds specified are in scope.",
            "type": "string",
            "enum": [
              "FULL",
              "LEVELS"
            ],
            "example": "FULL"
          },
          "levels": {
            "description": "Threshold for different levels of crawling.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "25",
              "50"
            ]
          },
          "threshold": {
            "title": "threshold",
            "description": "A threshold for ultimate percentage of ownership for UBOs. Default when unspecified; all discovered UBOs will be included.",
            "type": "integer",
            "example": 25
          },
          "includeDocs": {
            "description": "Parameter to or not to include the purchase of individual register documents. Default when unspecified; false.",
            "type": "boolean",
            "example": true
          },
          "monitor": {
            "description": "Include the monitoring of all discovered corporate nodes for some of the supported jurisdictions. Default when unspecified; false (e.g. false/true).",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "createUpdateRequest-schema": {
        "title": "createUpdateRequest",
        "description": "Update order with an action and oderId to release fund [resume] or abort.",
        "required": [
          "orderId",
          "action"
        ],
        "properties": {
          "credits": {
            "description": "Valid amount in Euro [minimum is 1].",
            "type": "integer",
            "example": "50"
          },
          "action": {
            "description": "Please select from RESUME or ABORT.",
            "type": "string",
            "enum": [
              "RESUME",
              "ABORT"
            ],
            "example": "RESUME"
          }
        },
        "type": "object"
      },
      "landRegisterRequest-schema": {
        "title": "landRegisterRequest",
        "description": "The landRegister object schema.",
        "required": [
          "countryCode",
          "productType",
          "districtId",
          "propertyId"
        ],
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          },
          "districtId": {
            "description": "The identification number of the district in which the property is located.",
            "type": "string"
          },
          "propertyId": {
            "description": "The identification of the property",
            "type": "string"
          }
        },
        "type": "object"
      },
      "genericProductSearchOption-schema": {
        "title": "productSearchOption",
        "description": "Response structure of generic order option.",
        "properties": {
          "date": {
            "nullable": true,
            "title": "date",
            "type": "string",
            "example": "2021-01-11"
          },
          "productName": {
            "title": "productName",
            "type": "string",
            "example": "Musterzeichnung"
          },
          "productOptionId": {
            "$ref": "#/components/schemas/productOptionId-schema"
          }
        },
        "type": "object"
      },
      "productOptionIdObject-schema": {
        "title": "productOption",
        "description": "Response structure of product option id.",
        "properties": {
          "productOptionId": {
            "$ref": "#/components/schemas/productOptionId-schema"
          }
        },
        "type": "object"
      },
      "searchOrderOption-schema": {
        "title": "searchOrderOption",
        "description": "Response structure of order option.",
        "properties": {
          "productOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/genericProductSearchOption-schema"
            }
          }
        },
        "type": "object"
      },
      "productSearchRequest-schema": {
        "title": "productSearchRequest",
        "description": "The product order object schema.",
        "required": [
          "kompanyId",
          "productType"
        ],
        "properties": {
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          },
          "startDate": {
            "$ref": "#/components/schemas/startDate-schema"
          },
          "endDate": {
            "$ref": "#/components/schemas/endDate-schema"
          }
        },
        "type": "object"
      },
      "businessConciergeOrderResponse-schema": {
        "title": "businessConciergeOrderResponse",
        "description": "Response structure of the business concierge order.",
        "properties": {
          "orderId": {
            "$ref": "#/components/schemas/orderId-schema"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "mimeTypes": {
            "nullable": true,
            "description": "The document type of the requested product, value needs to be passed to the header/accept field when retrieving the content (e.g. application/json).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "application/json",
              "application/pdf"
            ]
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "orderDeliveryTime": {
            "description": "The time the order was delivered (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string"
          },
          "estimatedDeliverySeconds": {
            "$ref": "#/components/schemas/estimatedDeliverySeconds-schema"
          },
          "info": {
            "description": "The info of the product.",
            "type": "string"
          },
          "orderOptions": {
            "properties": {
              "businessConciergeOption": {
                "$ref": "#/components/schemas/businessConciergeRequest-schema"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "datasetResponse-schema": {
        "title": "datasetResponse",
        "description": "Dataset respose",
        "properties": {
          "datasetId": {
            "description": "Unique id of dataset.",
            "type": "string",
            "example": "F75E3FE5C94019930B4195F667738D6C",
            "x-sorting": "0010"
          },
          "kompanyId": {
            "type": "string",
            "example": "B3F56CBD8A61B7744D7670610F639C8A",
            "x-sorting": "0011"
          },
          "datasetName": {
            "type": "string",
            "example": "REFRESH",
            "x-sorting": "0030"
          },
          "datasetOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/datasetOptionsRequest-schema"
              }
            ],
            "x-sorting": "0040"
          },
          "info": {
            "description": "The info of the product.",
            "type": "string",
            "x-sorting": "0050"
          },
          "status": {
            "x-sorting": "0060"
          },
          "requestTime": {
            "type": "string",
            "format": "date-time",
            "x-sorting": "0070"
          },
          "responseTime": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "x-sorting": "0080"
          },
          "estimatedDeliverySeconds": {
            "nullable": true,
            "type": "integer",
            "x-sorting": "0090"
          },
          "language": {
            "description": "Requested language code of the dataset.",
            "type": "string",
            "x-sorting": "0100"
          },
          "content": {
            "type": "object",
            "discriminator": {
              "propertyName": "version",
              "mapping": {
                "company-v2.0": "#/components/schemas/datasetCompanyContent-schema",
                "kyb-v2.0": "#/components/schemas/datasetCompanyLevContent-schema"
              }
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/datasetCompanyContent-schema"
              },
              {
                "$ref": "#/components/schemas/datasetCompanyLevContent-schema"
              }
            ],
            "x-sorting": "0990"
          },
          "version": {
            "type": "string",
            "x-sorting": "0999"
          }
        },
        "type": "object"
      },
      "enhancedResponse-schema": {
        "title": "enhancedResponse",
        "description": "enhancedDataset object.",
        "properties": {
          "datasetId": {
            "description": "Unique id of dataset.",
            "type": "string",
            "example": "F75E3FE5C94019930B4195F667738D6C",
            "x-sorting": "0010"
          },
          "kompanyId": {
            "type": "string",
            "example": "B3F56CBD8A61B7744D7670610F639C8A",
            "x-sorting": "0011"
          },
          "datasetName": {
            "type": "string",
            "example": "REFRESH",
            "x-sorting": "0030"
          },
          "enhancedOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/enhancedOptions-schema"
              }
            ],
            "x-sorting": "0040"
          },
          "info": {
            "description": "The info of the product.",
            "type": "string",
            "x-sorting": "0050"
          },
          "status": {
            "x-sorting": "0060"
          },
          "requestTime": {
            "type": "string",
            "format": "date-time",
            "x-sorting": "0070"
          },
          "responseTime": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "x-sorting": "0080"
          },
          "estimatedDeliverySeconds": {
            "nullable": true,
            "type": "integer",
            "x-sorting": "0090"
          },
          "language": {
            "description": "Requested language code of the dataset.",
            "type": "string",
            "x-sorting": "0100"
          },
          "content": {
            "type": "object",
            "discriminator": {
              "propertyName": "version",
              "mapping": {
                "company-v2.0": "#/components/schemas/datasetCompanyContent-schema",
                "kyb-v2.0": "#/components/schemas/datasetCompanyLevContent-schema"
              }
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/datasetCompanyContent-schema"
              },
              {
                "$ref": "#/components/schemas/datasetCompanyLevContent-schema"
              }
            ],
            "x-sorting": "0990"
          },
          "version": {
            "type": "string",
            "x-sorting": "0999"
          }
        },
        "type": "object"
      },
      "errorResponse-schema": {
        "title": "errorResponse",
        "description": "Response structure of error response.",
        "properties": {
          "code": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Wrong mimeType provided"
          },
          "fault": {
            "type": "string",
            "example": "ERR_PRODUCT_ORDER_CONTENT_WRONG_DOCUMENT_TYPE"
          }
        },
        "type": "object"
      },
      "landRegisterOrderResponse-schema": {
        "title": "landRegisterOrderResponse",
        "description": "Response structure of the landregister order.",
        "properties": {
          "orderId": {
            "$ref": "#/components/schemas/orderId-schema"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "mimeTypes": {
            "nullable": true,
            "description": "The document type of the requested product, value needs to be passed to the header/accept field when retrieving the content (e.g. application/json).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "application/json",
              "application/pdf"
            ]
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "orderDeliveryTime": {
            "description": "The time the order was delivered (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string"
          },
          "estimatedDeliverySeconds": {
            "$ref": "#/components/schemas/estimatedDeliverySeconds-schema"
          },
          "info": {
            "description": "The info of the product.",
            "type": "string"
          },
          "orderOptions": {
            "properties": {
              "landRegisterOption": {
                "$ref": "#/components/schemas/landRegisterRequest-schema"
              }
            },
            "type": "object"
          },
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          }
        },
        "type": "object"
      },
      "orderByIdResponse-schema": {
        "title": "orderResponse",
        "description": "Response structure of the order.",
        "properties": {
          "orderId": {
            "$ref": "#/components/schemas/orderId-schema"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "mimeTypes": {
            "nullable": true,
            "description": "The document type of the requested product, value needs to be passed to the header/accept field when retrieving the content (e.g. application/json).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "application/json",
              "application/pdf"
            ]
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "orderDeliveryTime": {
            "description": "The time the order was delivered (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string"
          },
          "estimatedDeliverySeconds": {
            "$ref": "#/components/schemas/estimatedDeliverySeconds-schema"
          },
          "info": {
            "description": "The info of the product.",
            "type": "string"
          },
          "orderOptions": {
            "type": "array",
            "items": {
              "properties": {
                "productOption": {
                  "properties": {
                    "productOptionId": {
                      "$ref": "#/components/schemas/productOptionId-schema"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          },
          "source": {
            "properties": {
              "name": {
                "description": "Name of the provider",
                "type": "string",
                "example": "Companies House"
              },
              "info": {
                "description": "Additional info for the provider.",
                "type": "string",
                "example": ""
              },
              "primary": {
                "description": "Is provider the primary source.",
                "type": "boolean",
                "example": "true"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "orderResponse-schema": {
        "title": "orderResponse",
        "description": "Response structure of the order.",
        "properties": {
          "orderId": {
            "$ref": "#/components/schemas/orderId-schema"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "mimeTypes": {
            "nullable": true,
            "description": "The document type of the requested product, value needs to be passed to the header/accept field when retrieving the content (e.g. application/json).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "application/json",
              "application/pdf"
            ]
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "orderDeliveryTime": {
            "description": "The time the order was delivered (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string"
          },
          "estimatedDeliverySeconds": {
            "$ref": "#/components/schemas/estimatedDeliverySeconds-schema"
          },
          "info": {
            "description": "The info of the product.",
            "type": "string"
          },
          "orderOptions": {
            "properties": {
              "productOption": {
                "properties": {
                  "productOptionId": {
                    "$ref": "#/components/schemas/productOptionId-schema"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          }
        },
        "type": "object"
      },
      "uboOrderOptionResponse-schema": {
        "title": "uboOrderOptionResponse",
        "description": "UBO order options",
        "properties": {
          "credits": {
            "description": "Valid amount in Euro [minimum is 1].",
            "type": "integer",
            "example": 50
          },
          "strategy": {
            "description": "Matching strategy. FULL:means all nodes in the tree are in scope of the crawl, LEVELS means only nodes fulfilling the levels thresholds specified are in scope.",
            "type": "string",
            "enum": [
              "FULL",
              "LEVELS"
            ],
            "example": "FULL"
          },
          "levels": {
            "description": "Threshold for different levels of crawling.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "25",
              "50"
            ]
          },
          "threshold": {
            "title": "threshold",
            "description": "A threshold for ultimate percentage of ownership for UBOs. Default when unspecified; all discovered UBOs will be included.",
            "type": "integer",
            "example": 25
          },
          "includeDocs": {
            "description": "Parameter to or not to include the purchase of individual register documents. Default when unspecified; false.",
            "type": "boolean",
            "example": true
          },
          "monitor": {
            "description": "Include the monitoring of all discovered corporate nodes for some of the supported jurisdictions. Default when unspecified; false (e.g. false/true).",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "uboOrderResponse-schema": {
        "title": "uboOrderResponse",
        "description": "Response structure of the ubo order.",
        "properties": {
          "orderId": {
            "$ref": "#/components/schemas/orderId-schema"
          },
          "kompanyId": {
            "$ref": "#/components/schemas/kompanyId-schema"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "mimeTypes": {
            "nullable": true,
            "description": "The document type of the requested product, value needs to be passed to the header/accept field when retrieving the content (e.g. application/json).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "application/json",
              "application/pdf"
            ]
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "orderDeliveryTime": {
            "description": "The time the order was delivered (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string"
          },
          "estimatedDeliverySeconds": {
            "$ref": "#/components/schemas/estimatedDeliverySeconds-schema"
          },
          "info": {
            "description": "The info of the product.",
            "type": "string"
          },
          "orderOptions": {
            "properties": {
              "uboOption": {
                "$ref": "#/components/schemas/uboOrderOptionResponse-schema"
              }
            },
            "type": "object"
          },
          "productType": {
            "$ref": "#/components/schemas/productType-schema"
          }
        },
        "type": "object"
      },
      "kompanyId-schema": {
        "title": "Kompany ID",
        "description": "Unique id of company element in subject. Static for a company for the lifetime.",
        "type": "string",
        "example": "E41861C895CB1DDDDA93054179FFA172"
      },
      "datasetName-schema": {
        "title": "Dataset Name",
        "description": "The type of dataset. (e.g. REFRESH, LEV, INDEX)",
        "type": "string",
        "example": "refresh"
      },
      "countryCode-schema": {
        "title": "Country Code",
        "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
        "type": "string",
        "example": "AT"
      },
      "language-schema": {
        "title": "Language",
        "description": "Language of the dataset (e.g. OG, EN, FR).",
        "type": "string",
        "example": "EN"
      },
      "status-schema": {
        "title": "Status",
        "description": "The dataset list query status. PROCESSING, COMPLETED, FAILED, DELAYED  or DENIED_NOT_AVAILABLE.",
        "type": "string",
        "example": "COMPLETED"
      },
      "searchMethod-schema": {
        "title": "Search Method",
        "description": "The type of search (e.g. NAME, NUMBER).",
        "type": "string",
        "example": "name"
      },
      "searchValue-schema": {
        "title": "Search Value",
        "description": "Search value in string format.",
        "type": "string",
        "example": "360kompany AG"
      },
      "productType-schema": {
        "title": "Product Type",
        "description": "Type of requested document. For the list of available types please refer to the documentation.",
        "type": "string",
        "example": "ADDOFVRAT"
      },
      "startDate-schema": {
        "title": "Start Date",
        "description": "Filter for list items regarding the start date for retrieving documents (e.g. ISO 8601 format of YYYY-MM-DD).",
        "type": "string",
        "format": "date",
        "example": "2021-11-04"
      },
      "endDate-schema": {
        "title": "End Date",
        "description": "Filter for list items regarding the end date for retrieving documents (e.g. ISO 8601 format of YYYY-MM-DD).",
        "type": "string",
        "format": "date",
        "example": "2023-11-04"
      },
      "orderId-schema": {
        "title": "Order ID",
        "description": "Unique id of the order.",
        "type": "string",
        "example": "72307E23FB971B70FC88B6CE4A8536F7"
      },
      "requestTimeFrom-schema": {
        "title": "Request Time From",
        "description": "Filter for list items regarding the start time of the original request (e.g. ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
        "type": "string",
        "example": "2021-08-12T09:43:16Z"
      },
      "requestTimeTo-schema": {
        "title": "Request Time To",
        "description": "Filter for list items regarding the end time of the original request (e.g. ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
        "type": "string",
        "example": "2021-08-12T09:43:16Z"
      },
      "requestTime-schema": {
        "title": "Request Time",
        "description": "Datetime when the request reaches the endpoint (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
        "type": "string",
        "example": "2022-11-16T11:26:33+00:00"
      },
      "responseTime-schema": {
        "title": "Response Time",
        "description": "Datetime when the response is sent to the consumer (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
        "type": "string",
        "example": "2022-11-16T11:26:33+00:00"
      },
      "estimatedDeliverySeconds-schema": {
        "title": "Estimated Delivery in Seconds",
        "description": "Estimated delivery time in seconds. The field is 0 when no estimation can be given like on Business Concierge Service.",
        "type": "number",
        "example": "3600"
      },
      "productOptionId-schema": {
        "title": "Product Option ID",
        "description": "Unique id to refer to the document when ordering a product.",
        "type": "string"
      },
      "productName-schema": {
        "title": "Product Name",
        "description": "The name of the referred product.",
        "type": "string",
        "example": "Register Report"
      },
      "productDescription-schema": {
        "title": "Product Description",
        "description": "The description of the requested product.",
        "type": "string",
        "example": "Current company information from the official primary source retrieved in real-time"
      },
      "productCategory-schema": {
        "title": "Product Category",
        "description": "The type of the requested product.",
        "type": "string"
      },
      "idSearchResponse-schema": {
        "title": "idSearchResponse",
        "description": "response structure of the idSearch method",
        "properties": {
          "searchMethod": {
            "description": "Search method used to find the results.",
            "type": "string",
            "example": "{kompanyId|bvdId|orbisId}"
          },
          "searchValue": {
            "description": "Search value parameter, either bvdId, orbisId, kompanyId or CountryCode/RegistrationNumber.",
            "type": "string",
            "example": "AT/01234567"
          },
          "status": {
            "$ref": "#/components/schemas/status-schema"
          },
          "alternativeSource": {
            "nullable": true,
            "type": "string"
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "searchResults": {
            "properties": {
              "kompanyId": {
                "$ref": "#/components/schemas/kompanyId-schema"
              },
              "countryCode": {
                "$ref": "#/components/schemas/countryCode-schema"
              },
              "registrationNumber": {
                "description": "Registration number of a company preceded by the country code.",
                "type": "string",
                "example": "AT/01234567"
              },
              "name": {
                "description": "Name of the legal entity.",
                "type": "string"
              },
              "additionalData": {
                "properties": {
                  "otherIdentifiers": {
                    "properties": {
                      "localNumber": {
                        "description": "Registration number of the company.",
                        "type": "string",
                        "example": "123456789"
                      },
                      "orbisId": {
                        "description": "Orbis ID of the entity.",
                        "type": "string",
                        "example": "123456789"
                      },
                      "bvdId": {
                        "description": "BVD ID of the entity.",
                        "type": "string",
                        "example": "AB123455678"
                      }
                    },
                    "type": "object",
                    "maxItems": 0
                  }
                },
                "type": "object"
              },
              "sources": {
                "type": "array",
                "items": {
                  "properties": {
                    "lastCheckedTime": {
                      "description": "The certain point of time when the data was last checked against the source (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
                      "type": "string",
                      "example": "2022-11-16T11:26:33+00:00"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "monitorChangeTypes-schema": {
        "title": "monitorChangeTypeResponse",
        "description": "Response structure of monitorChangeTypes.",
        "properties": {
          "monitorChangeTypes": {
            "description": "Required change types for the monitoring service in a format of array of string(s).",
            "type": "array",
            "items": {
              "properties": {
                "monitorChangeType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "example": "['address','activity']"
          }
        },
        "type": "object",
        "example": [
          "address",
          "all",
          "basic",
          "documents",
          "legalForm",
          "name",
          "shareholder",
          "status"
        ]
      },
      "uboLegalTypes-schema": {
        "title": "uboLegalTypes",
        "description": "Response structure of uboLegalTypes.",
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "legalType": {
            "description": "Legal type of the entity as provided by the source.",
            "type": "array",
            "items": {
              "properties": {
                "legalType": {
                  "type": "string",
                  "example": "Australian Proprietary Company"
                }
              },
              "type": "object"
            },
            "example": [
              "Australian Proprietary Company"
            ]
          }
        },
        "type": "object"
      },
      "ownershipTypeDetails-schema": {
        "title": "ownershipTypeDetail",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "einRequest-schema": {
        "title": "einRequest",
        "description": "EIN validation request model",
        "required": [
          "searchMethod",
          "searchValue"
        ],
        "properties": {
          "searchMethod": {
            "description": "The type of search (e.g. NAME, EINNUMBER).",
            "type": "string",
            "enum": [
              "name",
              "einNumber"
            ],
            "example": "name"
          },
          "searchValue": {
            "description": "Search value in string format.",
            "type": "string",
            "example": "061424911"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode-schema"
          },
          "zip": {
            "description": "Optional ZIP code parameter to improve results. (ZIP is preferred over countryCode).",
            "type": "string",
            "example": "1040"
          },
          "strictSearch": {
            "description": "Optional parameter to do tight matching. (Only the best match will be returned rather than the top 5).",
            "type": "boolean",
            "example": "false"
          }
        },
        "type": "object"
      },
      "einResponse-schema": {
        "title": "einResponse",
        "description": "EIN verification response model",
        "properties": {
          "searchMethod": {
            "description": "The type of search (e.g. NAME, EINNUMBER).",
            "type": "string",
            "enum": [
              "name",
              "einNumber"
            ],
            "example": "name"
          },
          "searchValue": {
            "description": "Search value in string format.",
            "type": "string",
            "example": "123456789"
          },
          "einSearchOptions": {
            "properties": {
              "zip": {
                "description": "Optional ZIP code parameter to improve results. (ZIP is preferred over countryCode).",
                "type": "string",
                "example": "1040"
              },
              "strictSearch": {
                "description": "Boolean parameter for wider range of results.",
                "type": "boolean",
                "example": "true"
              }
            },
            "type": "object"
          },
          "isValid": {
            "description": "Gives the confirmation if the requested identifier is valid.",
            "type": "boolean",
            "example": "true"
          },
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/einResponseSearchResultItem-schema"
            }
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sourceProvider-schema"
            }
          }
        },
        "type": "object"
      },
      "einResponseSearchResultItem-schema": {
        "title": "einResponseSearchResultItem",
        "description": "EIN search result item.",
        "properties": {
          "name": {
            "description": "This represents the name of the company.",
            "type": "string"
          },
          "ein": {
            "description": "Employer Identification Number (EIN), a unique identifier assigned by the Internal Revenue Service (IRS) to businesses in the United States.",
            "type": "string"
          },
          "irsScore": {
            "description": "It can span from A (100% match) to C (EIN is not in the IRS database).",
            "type": "string"
          },
          "irsScoreExplanation": {
            "description": "It provides an explanation based on data gathered through the US Internal Revenue Service.",
            "type": "string"
          },
          "dbaScore": {
            "description": "The score can be 'NO' or 'YES'.",
            "type": "string"
          },
          "dbaScoreExplanation": {
            "description": "It provides the information if a company name is not the legal name for the business (DBA = Doing Business As).",
            "type": "string"
          },
          "companyScore": {
            "description": "In case is 100, it implies that the record appears 100% of the times.",
            "type": "string"
          },
          "companyScoreExplanation": {
            "description": "It indicates the frequency of appearance of the record under the associated EIN.",
            "type": "string"
          },
          "providedStatus": {
            "description": "It can span from A (verified and NCOA Plus 4) to F (bad address and should not be mailed to).",
            "type": "string"
          },
          "providedStatusExplanation": {
            "description": "It indicates if the provided address has been verified and can be used for mailing.",
            "type": "string"
          },
          "confidenceScore": {
            "description": "It can span from A (best match) to F (lowest scores).",
            "type": "string"
          },
          "confidenceScoreExplanation": {
            "description": "It indicates the best match, if multiple records are returned.",
            "type": "string"
          },
          "address": {
            "description": "This is an array representing the company's address.",
            "type": "array",
            "items": {
              "properties": {
                "street": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "formattedAddress": {
            "$ref": "#/components/schemas/formattedAddress-schema"
          }
        },
        "type": "object"
      },
      "ibanRequest-schema": {
        "title": "ibanRequest",
        "description": "IBAN validation request model.",
        "required": [
          "searchMethod",
          "searchValue"
        ],
        "properties": {
          "searchMethod": {
            "description": "The type of search (e.g. BASIC, COMPREHENSIVE).",
            "type": "string",
            "enum": [
              "basic",
              "comprehensive"
            ],
            "example": "comprehensive"
          },
          "searchValue": {
            "description": "Search value in string format.",
            "type": "string",
            "example": "AT483200000012345864"
          }
        },
        "type": "object"
      },
      "ibanResponse-schema": {
        "title": "ibanResponse",
        "description": "IBAN verification response model.",
        "properties": {
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "searchMethod": {
            "description": "The type of search (e.g. BASIC, COMPREHENSIVE).",
            "type": "string",
            "enum": [
              "basic",
              "comprehensive"
            ],
            "example": "comprehensive"
          },
          "searchValue": {
            "description": "Search value in string format.",
            "type": "string",
            "example": "AT483200000012345864"
          },
          "isValid": {
            "description": "Gives the confirmation if the requested identifier is valid.",
            "type": "boolean",
            "example": "true"
          },
          "searchResult": {
            "$ref": "#/components/schemas/ibanSearchResult-schema"
          }
        },
        "type": "object"
      },
      "ibanSearchResult-schema": {
        "title": "ibanSearchResult",
        "description": "IBAN verification search result model.",
        "properties": {
          "bankCode": {
            "description": "This is the Bank Identifier Code (BIC) or SWIFT code.",
            "type": "string",
            "example": "ABCDEF"
          },
          "bankName": {
            "description": "This parameter represents the official name of the bank.",
            "type": "string",
            "example": "Example Bank"
          },
          "bankId": {
            "description": "This is a unique identifier for the bank.",
            "type": "string",
            "example": "123456"
          },
          "bankAddress": {
            "description": "This is the physical address of the bank.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sepaCredit": {
            "description": "Boolean parameter if the bank supports SEPA credit transfers.",
            "type": "boolean",
            "example": "true"
          },
          "sepaDebit": {
            "description": "Boolean parameter if the bank supports SEPA direct debits.",
            "type": "boolean",
            "example": "true"
          },
          "sepaB2b": {
            "description": "Boolean parameter if the bank supports SEPA B2B (business-to-business) direct debits.",
            "type": "boolean",
            "example": "true"
          },
          "sepaCards": {
            "description": "Boolean parameter if the bank supports SEPA card payments.",
            "type": "boolean",
            "example": "true"
          }
        },
        "type": "object"
      },
      "isinListing-schema": {
        "title": "isinListing",
        "description": "Response schema of isin verification search result listing.",
        "properties": {
          "identifier": {
            "description": "This is a unique identifier for a security.",
            "type": "string",
            "example": "BBG000D7C176"
          },
          "name": {
            "description": "The official name of the security.",
            "type": "string",
            "example": "TELEKOM AUSTRIA AG"
          },
          "symbol": {
            "description": "The ticker symbol under which the security is traded on the exchange.",
            "type": "string",
            "example": "TA1"
          },
          "exchangeCode": {
            "description": "The code of the exchange where the security is traded.",
            "type": "string",
            "example": "GR"
          },
          "securityType": {
            "description": "This field describes the type of the security.",
            "type": "string",
            "example": "Common Stock"
          },
          "marketSector": {
            "description": "The sector of the market in which the security is traded.",
            "type": "string",
            "example": "Equity"
          },
          "shareClassId": {
            "description": "This is a unique identifier for a specific class of shares if the company has multiple share classes.",
            "type": "string",
            "example": "BBG001SD38P0"
          },
          "additionalSecurityType": {
            "description": "This field describes the type of the security.",
            "type": "string",
            "example": "Common Stock"
          },
          "securityDescription": {
            "description": "This field describes the security.",
            "type": "string",
            "example": "TA1"
          },
          "isin": {
            "description": "Unique 12-character alphanumeric code identifying an International Securities Identification Number.",
            "type": "string",
            "example": "AT0000720008"
          }
        },
        "type": "object"
      },
      "isinRequest-schema": {
        "title": "isinRequest",
        "description": "ISIN validation request model.",
        "required": [
          "isin"
        ],
        "properties": {
          "isin": {
            "description": "International Securities Identification Number (ISIN) as search value.",
            "type": "string",
            "example": "AT0000720008"
          }
        },
        "type": "object"
      },
      "isinResponse-schema": {
        "title": "isinResponse",
        "description": "Response structure of isin verification.",
        "properties": {
          "requestTime": {
            "$ref": "#/components/schemas/requestTime-schema"
          },
          "responseTime": {
            "$ref": "#/components/schemas/responseTime-schema"
          },
          "isin": {
            "description": "International Securities Identification Number (ISIN) as search value.",
            "type": "string",
            "example": "AT0000720008"
          },
          "isValid": {
            "description": "Gives the confirmation if the requested identifier is valid.",
            "type": "boolean",
            "example": "true"
          },
          "searchResult": {
            "properties": {
              "listings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/isinListing-schema"
                }
              }
            },
            "type": "object"
          },
          "source": {
            "$ref": "#/components/schemas/sourceProvider-schema"
          }
        },
        "type": "object"
      },
      "isinSearchResult-schema": {
        "title": "isinSearchResult",
        "description": "Response schema of isin verification search result.",
        "properties": {
          "listings": {
            "type": "array",
            "items": {
              "properties": {
                "isin": {
                  "type": "string",
                  "example": "AT0000720008"
                },
                "identifier": {
                  "type": "string",
                  "example": "BBG000D7C176"
                },
                "name": {
                  "type": "string",
                  "example": "TELEKOM AUSTRIA AG"
                },
                "symbol": {
                  "type": "string",
                  "example": "TA1"
                },
                "exchangeCode": {
                  "type": "string",
                  "example": "GR"
                },
                "securityType": {
                  "type": "string",
                  "example": "Common Stock"
                },
                "additionalSecurityType": {
                  "type": "string",
                  "example": "Common Stock"
                },
                "securityDescription": {
                  "type": "string",
                  "example": "TA1"
                },
                "marketSector": {
                  "type": "string",
                  "example": "Equity"
                },
                "shareClassId": {
                  "type": "string",
                  "example": "BBG001SD38P0"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "leiValidationRequest-schema": {
        "title": "leiValidationRequest",
        "description": "Lei validation request model.",
        "required": [
          "searchMethod",
          "searchValue"
        ],
        "properties": {
          "searchMethod": {
            "description": "Type of identification number, most frequently LEI.",
            "type": "string",
            "example": "LEI"
          },
          "searchValue": {
            "description": "The search string, a lei number.",
            "type": "string",
            "example": "259400L3KBYEVNHEJF55"
          },
          "isinPageNumber": {
            "description": "Pagination setting for ISIN list, number of the page.",
            "type": "number",
            "default": 1,
            "example": 5
          },
          "isinPageSize": {
            "description": "Pagination setting for ISIN list, number of items in the result set.",
            "type": "number",
            "default": 10,
            "example": 5
          }
        },
        "type": "object"
      },
      "tinResponseSearchResult-schema": {
        "title": "tinResponseSearchResult",
        "description": "TIN Search result.",
        "properties": {
          "validationStatus": {
            "description": "Confirmation if IRS match has been found.",
            "type": "string"
          },
          "matchStatus": {
            "description": "Confirmation if EIN match has been found.",
            "type": "string"
          },
          "possibleMatch": {
            "description": "The name of the possible matching entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "tinRequest-schema": {
        "title": "tinRequest",
        "description": "TIN validation request model.",
        "required": [
          "searchMethod",
          "searchValue"
        ],
        "properties": {
          "searchMethod": {
            "description": "The type of search (e.g. tinNumberBasic, tinNumberComprehensive).",
            "type": "string",
            "enum": [
              "tinNumberBasic",
              "tinNumberComprehensive"
            ],
            "example": "tinNumberBasic"
          },
          "searchValue": {
            "description": "Search value in string format.",
            "type": "string",
            "example": "061424911"
          },
          "name": {
            "description": "The name of the referred entity.",
            "type": "string",
            "example": "tesla"
          }
        },
        "type": "object"
      },
      "tinResponse-schema": {
        "title": "tinResponse",
        "description": "TIN verification response model.",
        "properties": {
          "searchMethod": {
            "description": "The type of search (e.g. tinNumberBasic, tinNumberComprehensive).",
            "type": "string",
            "enum": [
              "tinNumberBasic",
              "tinNumberComprehensive"
            ],
            "example": "tinNumberBasic"
          },
          "searchValue": {
            "description": "Search value in string format.",
            "type": "string",
            "example": "123456789"
          },
          "tinSearchOptions": {
            "properties": {
              "name": {
                "description": "The name of the referred entity.",
                "type": "string",
                "example": "tesla"
              }
            },
            "type": "object"
          },
          "isValidTin": {
            "description": "Gives the confirmation if the requested identifier is valid.",
            "type": "boolean",
            "example": "true"
          },
          "isValidEin": {
            "description": "Gives the confirmation if the requested identifier is valid.",
            "type": "boolean",
            "example": "true"
          },
          "requestTime": {
            "description": "Datetime when the request reaches the endpoint (ISO 8601 format of YYYY MM- DDThh:mm:ssZ).",
            "type": "string",
            "example": "2019-10-01T12:00:00+00:00"
          },
          "responseTime": {
            "description": "Datetime when the response is sent to the consumer (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string",
            "example": "2019-10-01T12:00:00+00:00"
          },
          "searchResult": {
            "properties": {
              "einResult": {
                "$ref": "#/components/schemas/einResponseSearchResultItem-schema"
              },
              "tinResult": {
                "$ref": "#/components/schemas/tinResponseSearchResult-schema"
              }
            },
            "type": "object"
          },
          "sources": {
            "description": "| array",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sourceProvider-schema"
            }
          }
        },
        "type": "object"
      },
      "vatRequest-schema": {
        "title": "vatRequest",
        "description": "VAT validation request model.",
        "properties": {
          "vatNumber": {
            "description": "Value-Added Tax (VAT) as search value.",
            "type": "string",
            "example": "ATU71794702"
          },
          "name": {
            "description": "The name of the referred company.",
            "type": "string",
            "example": "Kompany"
          },
          "countryCode": {
            "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
            "type": "string",
            "example": "AT"
          },
          "addConfirmation": {
            "description": "Indicates if a PDF document with the results has been requested.",
            "type": "boolean",
            "example": "false"
          }
        },
        "type": "object"
      },
      "vatResponse-schema": {
        "title": "vatResponse",
        "description": "VAT validation response model.",
        "properties": {
          "countryCode": {
            "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
            "type": "string",
            "example": "AT"
          },
          "vatNumber": {
            "description": "Value-Added Tax (VAT) as search value.",
            "type": "string",
            "example": "ATU71794702"
          },
          "name": {
            "description": "The name of the referred entity.",
            "type": "string",
            "example": "Kompany"
          },
          "addConfirmation": {
            "description": "Indicates if a PDF document with the results has been requested.",
            "type": "boolean",
            "example": "false"
          },
          "isValid": {
            "description": "Gives the confirmation if the requested identifier is valid.",
            "type": "boolean"
          },
          "orderId": {
            "description": "Unique id of the order.",
            "type": "string"
          },
          "requestTime": {
            "description": "Datetime when the request reaches the endpoint (ISO 8601 format of YYYY MM- DDThh:mm:ssZ).",
            "type": "string",
            "example": "2019-10-01T12:00:00+00:00"
          },
          "responseTime": {
            "description": "Datetime when the response is sent to the consumer (ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
            "type": "string",
            "example": "2019-10-01T12:00:00+00:00"
          },
          "searchResults": {
            "description": "| VatVerificationResultItem[]",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vatResponseSearchResultItem-schema"
            }
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sourceProvider-schema"
            }
          }
        },
        "type": "object"
      },
      "vatResponseSearchResultItem-schema": {
        "title": "vatResponseSearchResultItem",
        "description": "VAT Search result item.",
        "properties": {
          "kompanyId": {
            "description": "Unique id of company element in subject. Static for a company for the lifetime.",
            "type": "string"
          },
          "registrationNumber": {
            "description": "Unique number of the referred entity.",
            "type": "string"
          },
          "content": {
            "properties": {
              "name": {
                "description": "The name of the referred entity.",
                "type": "string"
              },
              "vatNumber": {
                "description": "Value-Added Tax (VAT) as search value.",
                "type": "string"
              },
              "address": {
                "description": "The address of the referred entity.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "entityValidation-schema": {
        "title": "entityValidation",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "maxItems": 0
          },
          "relationships": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "maxItems": 0
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "maxItems": 0
          }
        },
        "type": "object"
      },
      "jurisdiction-schema": {
        "title": "jurisdiction",
        "description": "Response structure of the jurisdiction.",
        "properties": {
          "countryCode": {
            "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
            "type": "string",
            "x-sorting": "0010"
          },
          "countryName": {
            "description": "Name of the country.",
            "type": "string",
            "x-sorting": "0020"
          },
          "state": {
            "description": "Specific state being represented in the United States of America.",
            "type": "string",
            "x-sorting": "0021"
          },
          "continent": {
            "description": "Continent on which the country is located (e.g. Europe, Asia, North America, Africa, Oceania, South America).",
            "type": "string",
            "x-sorting": "0030"
          },
          "countryConnectionType": {
            "description": "The type of connection to the country's data sources (e.g. Live, Live - Regular Updates, Business Concierge, Discontinued, Not Covered Yet).",
            "type": "string",
            "x-sorting": "0040"
          },
          "updateFrequency": {
            "description": "Frequency of the data when the countryConnectionType is 'LIVE - Regular Updates' (e.g. Weekly, Monthly).",
            "type": "string",
            "x-sorting": "0050"
          },
          "status": {
            "description": "Overall status of services for the country.",
            "type": "string",
            "x-sorting": "0060"
          },
          "sources": {
            "description": "List of data sources providing data for the country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverageSources-schema"
            },
            "x-sorting": "0070"
          },
          "datasets": {
            "description": "List of available datasets available for the country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverageDetailList-schema"
            },
            "x-sorting": "0080"
          },
          "searches": {
            "description": "List of available searches related to the country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverageDetailList-schema"
            },
            "x-sorting": "0090"
          },
          "products": {
            "description": "List of available documents related to the country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverageDetailList-schema"
            },
            "x-sorting": "0100"
          },
          "otherServices": {
            "description": "List of other services available for the country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverageDetailList-schema"
            },
            "x-sorting": "0110"
          },
          "conciergeProducts": {
            "description": "List of available business concierge products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/coverageDetailList-schema"
            },
            "x-sorting": "0120"
          }
        },
        "type": "object"
      },
      "coverageDetailList-schema": {
        "title": "coverageDetailList",
        "description": "Response structure of coverageDetailList.",
        "properties": {
          "productName": {
            "description": "Name of the referred product.",
            "type": "string"
          },
          "productOriginalName": {
            "description": "Name of the referred product in original language.",
            "type": "string"
          },
          "productType": {
            "description": "Unique categorization of the product.",
            "type": "string"
          },
          "productCategory": {
            "description": "Category describing the nature of the product.",
            "type": "string"
          },
          "productDescription": {
            "description": "Brief description of the product.",
            "type": "string"
          },
          "countryCode": {
            "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
            "type": "string"
          },
          "estimatedDeliverySeconds": {
            "description": "Estimated delivery time in seconds.",
            "type": "integer"
          },
          "price": {
            "description": "Price of the product.",
            "type": "number"
          },
          "priceTier": {
            "description": "Categorization of the price range in tiers.",
            "type": "string"
          },
          "priceCurrency": {
            "description": "Currency of the price.",
            "type": "string"
          },
          "relatedProductType": {
            "description": "Unique identifier of the related product.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceId": {
            "description": "Unique identifier of the source providing this product.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "coverageSources-schema": {
        "title": "coverageSources",
        "description": "Response structure of coverage sources.",
        "properties": {
          "sourceName": {
            "description": "Short name identifying the source.",
            "type": "string",
            "x-sorting": "0010"
          },
          "sourceNameLong": {
            "description": "A longer, more descriptive name of the source.",
            "type": "string",
            "x-sorting": "0020"
          },
          "isPrimarySource": {
            "description": "Indicates whether the source is the primary data source in terms of coverage.",
            "type": "boolean",
            "x-sorting": "0030"
          },
          "sourceStatus": {
            "description": "The current status of the source.",
            "type": "string",
            "x-sorting": "0040"
          },
          "sourceConnectionType": {
            "description": "The type of connection to the source (e.g. Live, Live - Regular Updates, Business Concierge, Discontinued, Not Covered Yet).",
            "type": "string",
            "x-sorting": "0050"
          },
          "sourceId": {
            "description": "Unique identifier for the source.",
            "type": "string",
            "x-sorting": "0060"
          }
        },
        "type": "object"
      }
    },
    "parameters": {
      "addPdfExtract": {
        "$ref": "#/components/parameters/addPdfExtract-parameter"
      },
      "addProductRegisterReport": {
        "$ref": "#/components/parameters/addProductRegisterReport-parameter"
      },
      "kompanyId-parameter": {
        "name": "kompanyId",
        "in": "path",
        "description": "Unique id of entity, static for the lifetime.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "E41861C895CB1DDDDA93054179FFA172"
      },
      "datasetName-parameter": {
        "name": "datasetName",
        "in": "query",
        "description": "Name of dataset (e.g. FULL, REFRESH).",
        "schema": {
          "type": "string"
        },
        "example": "refresh"
      },
      "countryCode-parameter": {
        "name": "countryCode",
        "in": "path",
        "description": "2 or 5-digit code for the country (e.g. AT, US-DE).",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "AT"
      },
      "offset-parameter": {
        "name": "offset",
        "in": "query",
        "description": "The starting point of the results.",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": "0"
      },
      "limit-parameter": {
        "name": "limit",
        "in": "query",
        "description": "The number of maximum results.",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": "10"
      },
      "status-parameter": {
        "name": "status",
        "in": "query",
        "description": "The status of the current resource (PROCESSING, COMPLETED, FAILED, DELAYED, DENIED-NOT-AVAILABLE).",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "COMPLETED"
      },
      "productType-parameter": {
        "name": "productType",
        "in": "query",
        "description": "Type of requested document. For the list of available types please refer to the documentation.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "ADDOFVRAT"
      },
      "startDate-parameter": {
        "name": "startDate",
        "in": "query",
        "description": "Filter for list items regarding the start date for retrieving documents (e.g. ISO 8601 format of YYYY-MM-DD). This parameter only works when productType is ‘DOCOFSEUS’.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        },
        "example": "2021-11-04"
      },
      "endDate-parameter": {
        "name": "endDate",
        "in": "query",
        "description": "Filter for list items regarding the end date for retrieving documents (e.g. ISO 8601 format of YYYY-MM-DD). This parameter only works when productType is ‘DOCOFSEUS’.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        },
        "example": "2023-11-04"
      },
      "orderId-parameter": {
        "name": "orderId",
        "in": "path",
        "description": "Unique id of the order.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "72307E23FB971B70FC88B6CE4A8536F7"
      },
      "addPdfExtract-parameter": {
        "name": "addPdfExtract",
        "in": "query",
        "description": "Boolean parameter to generate a PDF.",
        "schema": {
          "type": "boolean"
        },
        "example": "true"
      },
      "addProductRegisterReport-parameter": {
        "name": "addProductRegisterReport",
        "in": "query",
        "description": "Boolean parameter to get Product Register Report.",
        "schema": {
          "type": "boolean"
        },
        "example": "true"
      },
      "requestTimeFrom-parameter": {
        "name": "requestTimeFrom",
        "in": "query",
        "description": "Filter for list items regarding the start time of the original request (e.g. ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
        "schema": {
          "type": "string"
        },
        "example": "2021-08-12T09:43:16Z"
      },
      "requestTimeTo-parameter": {
        "name": "requestTimeTo",
        "in": "query",
        "description": "Filter for list items regarding the end time of the original request (e.g. ISO 8601 format of YYYY-MM-DDThh:mm:ssZ).",
        "schema": {
          "type": "string"
        },
        "example": "2021-08-12T09:43:16Z"
      },
      "messageId-parameter": {
        "name": "messageId",
        "in": "path",
        "description": "Unique id of message.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "MDPAOCSHQ2JLTLAS0QX431WFYS6UNP2W"
      },
      "messageStatus-parameter": {
        "name": "status",
        "in": "query",
        "description": "Status of message.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "status=OPEN"
      },
      "messageCategory-parameter": {
        "name": "category",
        "in": "query",
        "description": "Category of message.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "category=Provider%20-%20Planned%20maintenance"
      },
      "messageAffectedService-parameter": {
        "name": "affectedService",
        "in": "query",
        "description": "AffectedService of message.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "affectedService=CLOUD"
      },
      "messageAffectedCountry-parameter": {
        "name": "affectedCountry[]",
        "in": "query",
        "description": "AffectedCountry of message.",
        "required": false,
        "example": "affectedCountry[]=AT"
      }
    },
    "securitySchemes": {
      "user_key": {
        "type": "apiKey",
        "name": "user_key",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "v2-system",
      "description": "System information"
    },
    {
      "name": "v2-company",
      "description": "Entity search and datasets"
    },
    {
      "name": "v2-product",
      "description": "Entity documents and products"
    },
    {
      "name": "v2-monitor",
      "description": "Entity monitor services"
    },
    {
      "name": "v2-verification",
      "description": "Entity identifier and risk verification"
    },
    {
      "name": "v2-application",
      "description": "Application level settings"
    }
  ]
}